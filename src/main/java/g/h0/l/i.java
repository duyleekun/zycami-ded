/*
 * Decompiled with CFR 0.151.
 */
package g.h0.l;

import f.h2.t.f0;
import g.h0.d;
import g.h0.l.i$a;
import h.n;
import h.o;
import okio.ByteString;

public final class i {
    private static final int[] a;
    private static final byte[] b;
    private static final i$a c;
    public static final i d;

    static {
        byte[] byArray;
        Object object;
        i i10;
        d = i10 = new i();
        int n10 = 256;
        int[] nArray = object = new int[n10];
        int[] nArray2 = object;
        nArray[0] = 8184;
        nArray2[1] = 8388568;
        nArray[2] = 0xFFFFFE2;
        nArray2[3] = 0xFFFFFE3;
        nArray[4] = 0xFFFFFE4;
        nArray2[5] = 0xFFFFFE5;
        nArray[6] = 0xFFFFFE6;
        nArray2[7] = 0xFFFFFE7;
        nArray[8] = 0xFFFFFE8;
        nArray2[9] = 0xFFFFEA;
        nArray[10] = 0x3FFFFFFC;
        nArray2[11] = 0xFFFFFE9;
        nArray[12] = 0xFFFFFEA;
        nArray2[13] = 0x3FFFFFFD;
        nArray[14] = 0xFFFFFEB;
        nArray2[15] = 0xFFFFFEC;
        nArray[16] = 0xFFFFFED;
        nArray2[17] = 0xFFFFFEE;
        nArray[18] = 0xFFFFFEF;
        nArray2[19] = 0xFFFFFF0;
        nArray[20] = 0xFFFFFF1;
        nArray2[21] = 0xFFFFFF2;
        nArray[22] = 0x3FFFFFFE;
        nArray2[23] = 0xFFFFFF3;
        nArray[24] = 0xFFFFFF4;
        nArray2[25] = 0xFFFFFF5;
        nArray[26] = 0xFFFFFF6;
        nArray2[27] = 0xFFFFFF7;
        nArray[28] = 0xFFFFFF8;
        nArray2[29] = 0xFFFFFF9;
        nArray[30] = 0xFFFFFFA;
        nArray2[31] = 0xFFFFFFB;
        nArray[32] = 20;
        nArray2[33] = 1016;
        nArray[34] = 1017;
        nArray2[35] = 4090;
        nArray[36] = 8185;
        nArray2[37] = 21;
        nArray[38] = 248;
        nArray2[39] = 2042;
        nArray[40] = 1018;
        nArray2[41] = 1019;
        nArray[42] = 249;
        nArray2[43] = 2043;
        nArray[44] = 250;
        nArray2[45] = 22;
        nArray[46] = 23;
        nArray2[47] = 24;
        nArray[48] = 0;
        nArray2[49] = 1;
        nArray[50] = 2;
        nArray2[51] = 25;
        nArray[52] = 26;
        nArray2[53] = 27;
        nArray[54] = 28;
        nArray2[55] = 29;
        nArray[56] = 30;
        nArray2[57] = 31;
        nArray[58] = 92;
        nArray2[59] = 251;
        nArray[60] = 32764;
        nArray2[61] = 32;
        nArray[62] = 4091;
        nArray2[63] = 1020;
        nArray[64] = 8186;
        nArray2[65] = 33;
        nArray[66] = 93;
        nArray2[67] = 94;
        nArray[68] = 95;
        nArray2[69] = 96;
        nArray[70] = 97;
        nArray2[71] = 98;
        nArray[72] = 99;
        nArray2[73] = 100;
        nArray[74] = 101;
        nArray2[75] = 102;
        nArray[76] = 103;
        nArray2[77] = 104;
        nArray[78] = 105;
        nArray2[79] = 106;
        nArray[80] = 107;
        nArray2[81] = 108;
        nArray[82] = 109;
        nArray2[83] = 110;
        nArray[84] = 111;
        nArray2[85] = 112;
        nArray[86] = 113;
        nArray2[87] = 114;
        nArray[88] = 252;
        nArray2[89] = 115;
        nArray[90] = 253;
        nArray2[91] = 8187;
        nArray[92] = 524272;
        nArray2[93] = 8188;
        nArray[94] = 16380;
        nArray2[95] = 34;
        nArray[96] = 32765;
        nArray2[97] = 3;
        nArray[98] = 35;
        nArray2[99] = 4;
        nArray[100] = 36;
        nArray2[101] = 5;
        nArray[102] = 37;
        nArray2[103] = 38;
        nArray[104] = 39;
        nArray2[105] = 6;
        nArray[106] = 116;
        nArray2[107] = 117;
        nArray[108] = 40;
        nArray2[109] = 41;
        nArray[110] = 42;
        nArray2[111] = 7;
        nArray[112] = 43;
        nArray2[113] = 118;
        nArray[114] = 44;
        nArray2[115] = 8;
        nArray[116] = 9;
        nArray2[117] = 45;
        nArray[118] = 119;
        nArray2[119] = 120;
        nArray[120] = 121;
        nArray2[121] = 122;
        nArray[122] = 123;
        nArray2[123] = 32766;
        nArray[124] = 2044;
        nArray2[125] = 16381;
        nArray[126] = 8189;
        nArray2[127] = 0xFFFFFFC;
        nArray[128] = 1048550;
        nArray2[129] = 4194258;
        nArray[130] = 1048551;
        nArray2[131] = 1048552;
        nArray[132] = 0x3FFFD3;
        nArray2[133] = 4194260;
        nArray[134] = 4194261;
        nArray2[135] = 8388569;
        nArray[136] = 4194262;
        nArray2[137] = 8388570;
        nArray[138] = 8388571;
        nArray2[139] = 8388572;
        nArray[140] = 0x7FFFDD;
        nArray2[141] = 8388574;
        nArray[142] = 0xFFFFEB;
        nArray2[143] = 0x7FFFDF;
        nArray[144] = 0xFFFFEC;
        nArray2[145] = 0xFFFFED;
        nArray[146] = 4194263;
        nArray2[147] = 8388576;
        nArray[148] = 0xFFFFEE;
        nArray2[149] = 8388577;
        nArray[150] = 8388578;
        nArray2[151] = 8388579;
        nArray[152] = 8388580;
        nArray2[153] = 2097116;
        nArray[154] = 4194264;
        nArray2[155] = 8388581;
        nArray[156] = 4194265;
        nArray2[157] = 8388582;
        nArray[158] = 0x7FFFE7;
        nArray2[159] = 0xFFFFEF;
        nArray[160] = 4194266;
        nArray2[161] = 0x1FFFDD;
        nArray[162] = 1048553;
        nArray2[163] = 4194267;
        nArray[164] = 4194268;
        nArray2[165] = 8388584;
        nArray[166] = 8388585;
        nArray2[167] = 2097118;
        nArray[168] = 8388586;
        nArray2[169] = 0x3FFFDD;
        nArray[170] = 4194270;
        nArray2[171] = 0xFFFFF0;
        nArray[172] = 0x1FFFDF;
        nArray2[173] = 0x3FFFDF;
        nArray[174] = 8388587;
        nArray2[175] = 8388588;
        nArray[176] = 2097120;
        nArray2[177] = 0x1FFFE1;
        nArray[178] = 4194272;
        nArray2[179] = 2097122;
        nArray[180] = 8388589;
        nArray2[181] = 4194273;
        nArray[182] = 0x7FFFEE;
        nArray2[183] = 0x7FFFEF;
        nArray[184] = 1048554;
        nArray2[185] = 4194274;
        nArray[186] = 0x3FFFE3;
        nArray2[187] = 4194276;
        nArray[188] = 0x7FFFF0;
        nArray2[189] = 4194277;
        nArray[190] = 4194278;
        nArray2[191] = 0x7FFFF1;
        nArray[192] = 67108832;
        nArray2[193] = 67108833;
        nArray[194] = 1048555;
        nArray2[195] = 524273;
        nArray[196] = 4194279;
        nArray2[197] = 0x7FFFF2;
        nArray[198] = 4194280;
        nArray2[199] = 33554412;
        nArray[200] = 67108834;
        nArray2[201] = 0x3FFFFE3;
        nArray[202] = 67108836;
        nArray2[203] = 134217694;
        nArray[204] = 0x7FFFFDF;
        nArray2[205] = 67108837;
        nArray[206] = 0xFFFFF1;
        nArray2[207] = 33554413;
        nArray[208] = 524274;
        nArray2[209] = 2097123;
        nArray[210] = 67108838;
        nArray2[211] = 134217696;
        nArray[212] = 134217697;
        nArray2[213] = 67108839;
        nArray[214] = 134217698;
        nArray2[215] = 0xFFFFF2;
        nArray[216] = 2097124;
        nArray2[217] = 2097125;
        nArray[218] = 67108840;
        nArray2[219] = 67108841;
        nArray[220] = 0xFFFFFFD;
        nArray2[221] = 134217699;
        nArray[222] = 134217700;
        nArray2[223] = 134217701;
        nArray[224] = 1048556;
        nArray2[225] = 0xFFFFF3;
        nArray[226] = 1048557;
        nArray2[227] = 2097126;
        nArray[228] = 4194281;
        nArray2[229] = 2097127;
        nArray[230] = 2097128;
        nArray2[231] = 0x7FFFF3;
        nArray[232] = 4194282;
        nArray2[233] = 4194283;
        nArray[234] = 0x1FFFFEE;
        nArray2[235] = 0x1FFFFEF;
        nArray[236] = 0xFFFFF4;
        nArray2[237] = 0xFFFFF5;
        nArray[238] = 67108842;
        nArray2[239] = 0x7FFFF4;
        nArray[240] = 67108843;
        nArray2[241] = 134217702;
        nArray[242] = 67108844;
        nArray2[243] = 67108845;
        nArray[244] = 0x7FFFFE7;
        nArray2[245] = 134217704;
        nArray[246] = 134217705;
        nArray2[247] = 134217706;
        nArray[248] = 134217707;
        nArray2[249] = 0xFFFFFFE;
        nArray[250] = 134217708;
        nArray2[251] = 134217709;
        nArray[252] = 0x7FFFFEE;
        nArray2[253] = 0x7FFFFEF;
        nArray[254] = 0x7FFFFF0;
        nArray2[255] = 0x3FFFFEE;
        a = object;
        byte[] byArray2 = byArray = new byte[n10];
        byte[] byArray3 = byArray;
        byArray2[0] = 13;
        byArray3[1] = 23;
        byArray2[2] = 28;
        byArray3[3] = 28;
        byArray2[4] = 28;
        byArray3[5] = 28;
        byArray2[6] = 28;
        byArray3[7] = 28;
        byArray2[8] = 28;
        byArray3[9] = 24;
        byArray2[10] = 30;
        byArray3[11] = 28;
        byArray2[12] = 28;
        byArray3[13] = 30;
        byArray2[14] = 28;
        byArray3[15] = 28;
        byArray2[16] = 28;
        byArray3[17] = 28;
        byArray2[18] = 28;
        byArray3[19] = 28;
        byArray2[20] = 28;
        byArray3[21] = 28;
        byArray2[22] = 30;
        byArray3[23] = 28;
        byArray2[24] = 28;
        byArray3[25] = 28;
        byArray2[26] = 28;
        byArray3[27] = 28;
        byArray2[28] = 28;
        byArray3[29] = 28;
        byArray2[30] = 28;
        byArray3[31] = 28;
        byArray2[32] = 6;
        byArray3[33] = 10;
        byArray2[34] = 10;
        byArray3[35] = 12;
        byArray2[36] = 13;
        byArray3[37] = 6;
        byArray2[38] = 8;
        byArray3[39] = 11;
        byArray2[40] = 10;
        byArray3[41] = 10;
        byArray2[42] = 8;
        byArray3[43] = 11;
        byArray2[44] = 8;
        byArray3[45] = 6;
        byArray2[46] = 6;
        byArray3[47] = 6;
        byArray2[48] = 5;
        byArray3[49] = 5;
        byArray2[50] = 5;
        byArray3[51] = 6;
        byArray2[52] = 6;
        byArray3[53] = 6;
        byArray2[54] = 6;
        byArray3[55] = 6;
        byArray2[56] = 6;
        byArray3[57] = 6;
        byArray2[58] = 7;
        byArray3[59] = 8;
        byArray2[60] = 15;
        byArray3[61] = 6;
        byArray2[62] = 12;
        byArray3[63] = 10;
        byArray2[64] = 13;
        byArray3[65] = 6;
        byArray2[66] = 7;
        byArray3[67] = 7;
        byArray2[68] = 7;
        byArray3[69] = 7;
        byArray2[70] = 7;
        byArray3[71] = 7;
        byArray2[72] = 7;
        byArray3[73] = 7;
        byArray2[74] = 7;
        byArray3[75] = 7;
        byArray2[76] = 7;
        byArray3[77] = 7;
        byArray2[78] = 7;
        byArray3[79] = 7;
        byArray2[80] = 7;
        byArray3[81] = 7;
        byArray2[82] = 7;
        byArray3[83] = 7;
        byArray2[84] = 7;
        byArray3[85] = 7;
        byArray2[86] = 7;
        byArray3[87] = 7;
        byArray2[88] = 8;
        byArray3[89] = 7;
        byArray2[90] = 8;
        byArray3[91] = 13;
        byArray2[92] = 19;
        byArray3[93] = 13;
        byArray2[94] = 14;
        byArray3[95] = 6;
        byArray2[96] = 15;
        byArray3[97] = 5;
        byArray2[98] = 6;
        byArray3[99] = 5;
        byArray2[100] = 6;
        byArray3[101] = 5;
        byArray2[102] = 6;
        byArray3[103] = 6;
        byArray2[104] = 6;
        byArray3[105] = 5;
        byArray2[106] = 7;
        byArray3[107] = 7;
        byArray2[108] = 6;
        byArray3[109] = 6;
        byArray2[110] = 6;
        byArray3[111] = 5;
        byArray2[112] = 6;
        byArray3[113] = 7;
        byArray2[114] = 6;
        byArray3[115] = 5;
        byArray2[116] = 5;
        byArray3[117] = 6;
        byArray2[118] = 7;
        byArray3[119] = 7;
        byArray2[120] = 7;
        byArray3[121] = 7;
        byArray2[122] = 7;
        byArray3[123] = 15;
        byArray2[124] = 11;
        byArray3[125] = 14;
        byArray2[126] = 13;
        byArray3[127] = 28;
        byArray2[128] = 20;
        byArray3[129] = 22;
        byArray2[130] = 20;
        byArray3[131] = 20;
        byArray2[132] = 22;
        byArray3[133] = 22;
        byArray2[134] = 22;
        byArray3[135] = 23;
        byArray2[136] = 22;
        byArray3[137] = 23;
        byArray2[138] = 23;
        byArray3[139] = 23;
        byArray2[140] = 23;
        byArray3[141] = 23;
        byArray2[142] = 24;
        byArray3[143] = 23;
        byArray2[144] = 24;
        byArray3[145] = 24;
        byArray2[146] = 22;
        byArray3[147] = 23;
        byArray2[148] = 24;
        byArray3[149] = 23;
        byArray2[150] = 23;
        byArray3[151] = 23;
        byArray2[152] = 23;
        byArray3[153] = 21;
        byArray2[154] = 22;
        byArray3[155] = 23;
        byArray2[156] = 22;
        byArray3[157] = 23;
        byArray2[158] = 23;
        byArray3[159] = 24;
        byArray2[160] = 22;
        byArray3[161] = 21;
        byArray2[162] = 20;
        byArray3[163] = 22;
        byArray2[164] = 22;
        byArray3[165] = 23;
        byArray2[166] = 23;
        byArray3[167] = 21;
        byArray2[168] = 23;
        byArray3[169] = 22;
        byArray2[170] = 22;
        byArray3[171] = 24;
        byArray2[172] = 21;
        byArray3[173] = 22;
        byArray2[174] = 23;
        byArray3[175] = 23;
        byArray2[176] = 21;
        byArray3[177] = 21;
        byArray2[178] = 22;
        byArray3[179] = 21;
        byArray2[180] = 23;
        byArray3[181] = 22;
        byArray2[182] = 23;
        byArray3[183] = 23;
        byArray2[184] = 20;
        byArray3[185] = 22;
        byArray2[186] = 22;
        byArray3[187] = 22;
        byArray2[188] = 23;
        byArray3[189] = 22;
        byArray2[190] = 22;
        byArray3[191] = 23;
        byArray2[192] = 26;
        byArray3[193] = 26;
        byArray2[194] = 20;
        byArray3[195] = 19;
        byArray2[196] = 22;
        byArray3[197] = 23;
        byArray2[198] = 22;
        byArray3[199] = 25;
        byArray2[200] = 26;
        byArray3[201] = 26;
        byArray2[202] = 26;
        byArray3[203] = 27;
        byArray2[204] = 27;
        byArray3[205] = 26;
        byArray2[206] = 24;
        byArray3[207] = 25;
        byArray2[208] = 19;
        byArray3[209] = 21;
        byArray2[210] = 26;
        byArray3[211] = 27;
        byArray2[212] = 27;
        byArray3[213] = 26;
        byArray2[214] = 27;
        byArray3[215] = 24;
        byArray2[216] = 21;
        byArray3[217] = 21;
        byArray2[218] = 26;
        byArray3[219] = 26;
        byArray2[220] = 28;
        byArray3[221] = 27;
        byArray2[222] = 27;
        byArray3[223] = 27;
        byArray2[224] = 20;
        byArray3[225] = 24;
        byArray2[226] = 20;
        byArray3[227] = 21;
        byArray2[228] = 22;
        byArray3[229] = 21;
        byArray2[230] = 21;
        byArray3[231] = 23;
        byArray2[232] = 22;
        byArray3[233] = 22;
        byArray2[234] = 25;
        byArray3[235] = 25;
        byArray2[236] = 24;
        byArray3[237] = 24;
        byArray2[238] = 26;
        byArray3[239] = 23;
        byArray2[240] = 26;
        byArray3[241] = 27;
        byArray2[242] = 26;
        byArray3[243] = 26;
        byArray2[244] = 27;
        byArray3[245] = 27;
        byArray2[246] = 27;
        byArray3[247] = 27;
        byArray2[248] = 27;
        byArray3[249] = 28;
        byArray2[250] = 27;
        byArray3[251] = 27;
        byArray2[252] = 27;
        byArray3[253] = 27;
        byArray2[254] = 27;
        byArray3[255] = 26;
        b = byArray;
        object = new i$a;
        object();
        c = object;
        n10 = byArray.length;
        object = null;
        for (int i11 = 0; i11 < n10; ++i11) {
            int[] nArray3 = a;
            int n11 = nArray3[i11];
            byte[] byArray4 = b;
            byte by2 = byArray4[i11];
            i10.a(i11, n11, by2);
        }
    }

    private i() {
    }

    private final void a(int n10, int n11, int n12) {
        int n13;
        i$a i$a = new i$a(n10, n12);
        Object[] objectArray = c;
        while (n12 > (n13 = 8)) {
            n13 = n11 >>> (n12 += -8) & 0xFF;
            objectArray = objectArray.a();
            f0.m(objectArray);
            i$a i$a2 = objectArray[n13];
            if (i$a2 == null) {
                i$a2 = new i$a();
                objectArray[n13] = i$a2;
            }
            objectArray = i$a2;
        }
        n11 = n11 << (n13 -= n12) & 0xFF;
        n12 = 1 << n13;
        objectArray = objectArray.a();
        f0.m(objectArray);
        f.x1.n.n2(objectArray, i$a, n11, n12 += n11);
    }

    public final void b(o object, long l10, n n10) {
        int n11;
        long l11;
        f0.p(object, "source");
        f0.p(n10, "sink");
        Object object2 = c;
        int n12 = 0;
        long l12 = l11 = 0L;
        int n13 = 0;
        while (true) {
            long l13 = l12 == l10 ? 0 : (l12 < l10 ? -1 : 1);
            n11 = 255;
            if (l13 >= 0) break;
            l13 = g.h0.d.b(object.readByte(), n11);
            n12 = n12 << 8 | l13;
            n13 += 8;
            while (n13 >= (l13 = (long)8)) {
                l13 = n13 + -8;
                int n14 = n12 >>> l13 & n11;
                object2 = ((i$a)object2).a();
                f0.m(object2);
                object2 = object2[n14];
                f0.m(object2);
                i$a[] i$aArray = ((i$a)object2).a();
                if (i$aArray == null) {
                    l13 = ((i$a)object2).b();
                    n10.writeByte((int)l13);
                    int n15 = ((i$a)object2).c();
                    n13 -= n15;
                    object2 = c;
                    continue;
                }
                n13 = (int)l13;
            }
            long l14 = 1L;
            l12 += l14;
        }
        while (n13 > 0) {
            int n16;
            int n17 = 8 - n13;
            n17 = n12 << n17 & n11;
            i$a[] i$aArray = ((i$a)object2).a();
            f0.m(i$aArray);
            object = i$aArray[n17];
            f0.m(object);
            i$aArray = ((i$a)object).a();
            if (i$aArray != null || (n16 = ((i$a)object).c()) > n13) break;
            n16 = ((i$a)object).b();
            n10.writeByte(n16);
            n17 = ((i$a)object).c();
            n13 -= n17;
            object2 = c;
        }
    }

    public final void c(ByteString byteString, n n10) {
        long l10;
        f0.p(byteString, "source");
        String string2 = "sink";
        f0.p(n10, string2);
        int n11 = byteString.size();
        long l11 = l10 = 0L;
        int n12 = 0;
        for (int i10 = 0; i10 < n11; ++i10) {
            int n13 = g.h0.d.b(byteString.getByte(i10), 255);
            int[] nArray = a;
            int n14 = nArray[n13];
            byte[] byArray = b;
            n13 = byArray[n13];
            l11 <<= n13;
            long l12 = n14;
            l11 |= l12;
            n12 += n13;
            while (n12 >= (n13 = 8)) {
                long l13 = l11 >> (n12 += -8);
                n13 = (int)l13;
                n10.writeByte(n13);
            }
        }
        if (n12 > 0) {
            int n15 = 8 - n12;
            long l14 = l11 << n15;
            l11 = 255L;
            l10 = l11 >>> n12;
            n15 = (int)(l14 |= l10);
            n10.writeByte(n15);
        }
    }

    public final int d(ByteString byteString) {
        String string2 = "bytes";
        f0.p(byteString, string2);
        int n10 = byteString.size();
        long l10 = 0L;
        for (int i10 = 0; i10 < n10; ++i10) {
            int n11 = byteString.getByte(i10);
            int n12 = 255;
            n11 = g.h0.d.b((byte)n11, n12);
            byte[] byArray = b;
            n11 = byArray[n11];
            long l11 = n11;
            l10 += l11;
        }
        long l12 = 7;
        return (int)(l10 + l12 >> 3);
    }
}

