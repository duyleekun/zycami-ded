/*
 * Decompiled with CFR 0.151.
 */
package com.zhiyun.cama.data.database;

import androidx.room.RoomDatabase$Callback;
import androidx.room.RoomOpenHelper$Delegate;
import androidx.room.RoomOpenHelper$ValidationResult;
import androidx.room.util.DBUtil;
import androidx.room.util.TableInfo;
import androidx.room.util.TableInfo$Column;
import androidx.room.util.TableInfo$Index;
import androidx.sqlite.db.SupportSQLiteDatabase;
import com.zhiyun.cama.data.database.AppDatabaseComm_Impl;
import java.io.Serializable;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class AppDatabaseComm_Impl$1
extends RoomOpenHelper$Delegate {
    public final /* synthetic */ AppDatabaseComm_Impl this$0;

    public AppDatabaseComm_Impl$1(AppDatabaseComm_Impl appDatabaseComm_Impl, int n10) {
        this.this$0 = appDatabaseComm_Impl;
        super(n10);
    }

    public void createAllTables(SupportSQLiteDatabase supportSQLiteDatabase) {
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `music_info_data` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `musicName` TEXT, `albumType` INTEGER NOT NULL, `albumName` TEXT, `musicPath` TEXT, `musicUrl` TEXT, `musicImage` TEXT, `duration` INTEGER NOT NULL, `size` INTEGER NOT NULL, `import_timestamp` INTEGER NOT NULL)");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `filter_type` (`thumb` TEXT, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `res_id` INTEGER NOT NULL, `label` TEXT, `label_tw` TEXT, `label_en` TEXT, `sort` INTEGER NOT NULL)");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `filter_data` (`type_id` INTEGER NOT NULL, `size` INTEGER NOT NULL, `path` TEXT, `thumb` TEXT, `hash` TEXT, `main_sort` INTEGER NOT NULL, `licensePath` TEXT, `licenseName` TEXT, `requiredPrime` INTEGER NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `res_id` INTEGER NOT NULL, `label` TEXT, `label_tw` TEXT, `label_en` TEXT, `sort` INTEGER NOT NULL)");
        supportSQLiteDatabase.execSQL("CREATE INDEX IF NOT EXISTS `index_filter_data_type_id` ON `filter_data` (`type_id`)");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `filter_file` (`hash` TEXT NOT NULL, `name` TEXT, `category` TEXT, `mime` TEXT, `size` INTEGER NOT NULL, `url` TEXT, `path` TEXT, `download_timestamp` INTEGER NOT NULL, `ext_lic_url` TEXT, `ext_lic_name` TEXT, `ext_lic_path` TEXT, PRIMARY KEY(`hash`))");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `album_data` (`cover_url` TEXT, `song_count` INTEGER NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `res_id` INTEGER NOT NULL, `label` TEXT, `label_tw` TEXT, `label_en` TEXT, `sort` INTEGER NOT NULL)");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `music_data` (`album_id` INTEGER, `thumb` TEXT, `hash` TEXT, `duration` INTEGER NOT NULL, `size` INTEGER NOT NULL, `path` TEXT, `file_download_timestamp` INTEGER NOT NULL, `requiredPrime` INTEGER NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `res_id` INTEGER NOT NULL, `label` TEXT, `label_tw` TEXT, `label_en` TEXT, `sort` INTEGER NOT NULL)");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `music_file` (`hash` TEXT NOT NULL, `name` TEXT, `category` TEXT, `mime` TEXT, `size` INTEGER NOT NULL, `url` TEXT, `path` TEXT, `download_timestamp` INTEGER NOT NULL, `ext_lic_url` TEXT, `ext_lic_name` TEXT, `ext_lic_path` TEXT, PRIMARY KEY(`hash`))");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `font_data` (`size` INTEGER NOT NULL, `path` TEXT, `hash` TEXT, `thumb` TEXT, `requiredPrime` INTEGER NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `res_id` INTEGER NOT NULL, `label` TEXT, `label_tw` TEXT, `label_en` TEXT, `sort` INTEGER NOT NULL)");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `font_file` (`hash` TEXT NOT NULL, `name` TEXT, `category` TEXT, `mime` TEXT, `size` INTEGER NOT NULL, `url` TEXT, `path` TEXT, `download_timestamp` INTEGER NOT NULL, `ext_lic_url` TEXT, `ext_lic_name` TEXT, `ext_lic_path` TEXT, PRIMARY KEY(`hash`))");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `caption_style_data` (`size` INTEGER NOT NULL, `path` TEXT, `hash` TEXT, `thumb` TEXT, `licensePath` TEXT, `licenseName` TEXT, `requiredPrime` INTEGER NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `res_id` INTEGER NOT NULL, `label` TEXT, `label_tw` TEXT, `label_en` TEXT, `sort` INTEGER NOT NULL)");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `caption_style_file` (`hash` TEXT NOT NULL, `name` TEXT, `category` TEXT, `mime` TEXT, `size` INTEGER NOT NULL, `url` TEXT, `path` TEXT, `download_timestamp` INTEGER NOT NULL, `ext_lic_url` TEXT, `ext_lic_name` TEXT, `ext_lic_path` TEXT, PRIMARY KEY(`hash`))");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `sticker_type` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `res_id` INTEGER NOT NULL, `label` TEXT, `label_tw` TEXT, `label_en` TEXT, `sort` INTEGER NOT NULL)");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `sticker_data` (`type_id` INTEGER NOT NULL, `size` INTEGER NOT NULL, `name` TEXT, `scale` REAL NOT NULL, `thumb` TEXT, `little_thumb` TEXT, `path` TEXT, `hash` TEXT, `licensePath` TEXT, `licenseName` TEXT, `requiredPrime` INTEGER NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `res_id` INTEGER NOT NULL, `label` TEXT, `label_tw` TEXT, `label_en` TEXT, `sort` INTEGER NOT NULL)");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `sticker_file` (`hash` TEXT NOT NULL, `name` TEXT, `category` TEXT, `mime` TEXT, `size` INTEGER NOT NULL, `url` TEXT, `path` TEXT, `download_timestamp` INTEGER NOT NULL, `ext_lic_url` TEXT, `ext_lic_name` TEXT, `ext_lic_path` TEXT, PRIMARY KEY(`hash`))");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `transition_data` (`size` INTEGER NOT NULL, `path` TEXT, `hash` TEXT, `thumb` TEXT, `littleThumb` TEXT, `transitionType` INTEGER NOT NULL, `licensePath` TEXT, `licenseName` TEXT, `requiredPrime` INTEGER NOT NULL, `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `res_id` INTEGER NOT NULL, `label` TEXT, `label_tw` TEXT, `label_en` TEXT, `sort` INTEGER NOT NULL)");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `transition_file` (`hash` TEXT NOT NULL, `name` TEXT, `category` TEXT, `mime` TEXT, `size` INTEGER NOT NULL, `url` TEXT, `path` TEXT, `download_timestamp` INTEGER NOT NULL, `ext_lic_url` TEXT, `ext_lic_name` TEXT, `ext_lic_path` TEXT, PRIMARY KEY(`hash`))");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS `music_beat_data` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `music_path` TEXT, `beat_map` TEXT)");
        supportSQLiteDatabase.execSQL("CREATE UNIQUE INDEX IF NOT EXISTS `index_music_beat_data_music_path` ON `music_beat_data` (`music_path`)");
        supportSQLiteDatabase.execSQL("CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)");
        supportSQLiteDatabase.execSQL("INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'ba989ba01ec08ab8a7432a22c1eb6709')");
    }

    public void dropAllTables(SupportSQLiteDatabase supportSQLiteDatabase) {
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `music_info_data`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `filter_type`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `filter_data`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `filter_file`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `album_data`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `music_data`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `music_file`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `font_data`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `font_file`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `caption_style_data`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `caption_style_file`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `sticker_type`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `sticker_data`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `sticker_file`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `transition_data`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `transition_file`");
        supportSQLiteDatabase.execSQL("DROP TABLE IF EXISTS `music_beat_data`");
        List list = AppDatabaseComm_Impl.access$000(this.this$0);
        if (list != null) {
            list = null;
            List list2 = AppDatabaseComm_Impl.access$100(this.this$0);
            int n10 = list2.size();
            for (int i10 = 0; i10 < n10; ++i10) {
                RoomDatabase$Callback roomDatabase$Callback = (RoomDatabase$Callback)AppDatabaseComm_Impl.access$200(this.this$0).get(i10);
                roomDatabase$Callback.onDestructiveMigration(supportSQLiteDatabase);
            }
        }
    }

    public void onCreate(SupportSQLiteDatabase supportSQLiteDatabase) {
        List list = AppDatabaseComm_Impl.access$300(this.this$0);
        if (list != null) {
            list = null;
            List list2 = AppDatabaseComm_Impl.access$400(this.this$0);
            int n10 = list2.size();
            for (int i10 = 0; i10 < n10; ++i10) {
                RoomDatabase$Callback roomDatabase$Callback = (RoomDatabase$Callback)AppDatabaseComm_Impl.access$500(this.this$0).get(i10);
                roomDatabase$Callback.onCreate(supportSQLiteDatabase);
            }
        }
    }

    public void onOpen(SupportSQLiteDatabase supportSQLiteDatabase) {
        AppDatabaseComm_Impl.access$602(this.this$0, supportSQLiteDatabase);
        AppDatabaseComm_Impl.access$700(this.this$0, supportSQLiteDatabase);
        List list = AppDatabaseComm_Impl.access$800(this.this$0);
        if (list != null) {
            list = null;
            List list2 = AppDatabaseComm_Impl.access$900(this.this$0);
            int n10 = list2.size();
            for (int i10 = 0; i10 < n10; ++i10) {
                RoomDatabase$Callback roomDatabase$Callback = (RoomDatabase$Callback)AppDatabaseComm_Impl.access$1000(this.this$0).get(i10);
                roomDatabase$Callback.onOpen(supportSQLiteDatabase);
            }
        }
    }

    public void onPostMigrate(SupportSQLiteDatabase supportSQLiteDatabase) {
    }

    public void onPreMigrate(SupportSQLiteDatabase supportSQLiteDatabase) {
        DBUtil.dropFtsSyncTriggers(supportSQLiteDatabase);
    }

    public RoomOpenHelper$ValidationResult onValidateSchema(SupportSQLiteDatabase supportSQLiteDatabase) {
        Serializable serializable;
        Object object = supportSQLiteDatabase;
        Object object2 = new HashMap(10);
        boolean bl2 = true;
        HashSet<Object> hashSet = serializable;
        serializable = new TableInfo$Column("id", "INTEGER", bl2, 1, null, 1);
        hashSet = "id";
        ((HashMap)object2).put(hashSet, serializable);
        Object object3 = serializable;
        serializable = new TableInfo$Column("musicName", "TEXT", false, 0, null, 1);
        ((HashMap)object2).put("musicName", serializable);
        Object object4 = null;
        Object object5 = null;
        boolean bl3 = true;
        Object object6 = serializable;
        serializable = new TableInfo$Column("albumType", "INTEGER", true, 0, null, (int)(bl3 ? 1 : 0));
        ((HashMap)object2).put("albumType", serializable);
        object6 = serializable;
        serializable = new TableInfo$Column("albumName", "TEXT", false, 0, null, (int)(bl3 ? 1 : 0));
        ((HashMap)object2).put("albumName", serializable);
        object6 = serializable;
        serializable = new TableInfo$Column("musicPath", "TEXT", false, 0, null, (int)(bl3 ? 1 : 0));
        ((HashMap)object2).put("musicPath", serializable);
        object6 = serializable;
        serializable = new TableInfo$Column("musicUrl", "TEXT", false, 0, null, (int)(bl3 ? 1 : 0));
        ((HashMap)object2).put("musicUrl", serializable);
        object6 = serializable;
        serializable = new TableInfo$Column("musicImage", "TEXT", false, 0, null, (int)(bl3 ? 1 : 0));
        ((HashMap)object2).put("musicImage", serializable);
        boolean bl4 = true;
        object6 = serializable;
        serializable = new TableInfo$Column("duration", "INTEGER", bl4, 0, null, (int)(bl3 ? 1 : 0));
        ((HashMap)object2).put("duration", serializable);
        object6 = serializable;
        serializable = new TableInfo$Column("size", "INTEGER", bl4, 0, null, (int)(bl3 ? 1 : 0));
        object3 = "size";
        ((HashMap)object2).put(object3, serializable);
        object6 = serializable;
        serializable = new TableInfo$Column("import_timestamp", "INTEGER", bl4, 0, null, (int)(bl3 ? 1 : 0));
        ((HashMap)object2).put("import_timestamp", serializable);
        boolean bl5 = false;
        object6 = null;
        serializable = new HashSet(0);
        Object object7 = new HashSet(0);
        Object object8 = "music_info_data";
        List<String> list = new List<String>((String)object8, object2, serializable, object7);
        object2 = TableInfo.read(supportSQLiteDatabase, "music_info_data");
        boolean n10 = ((TableInfo)((Object)list)).equals(object2);
        object7 = "\n Found:\n";
        if (!n10) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("music_info_data(com.zhiyun.cama.data.database.model.music.MusicInfoData).\n Expected:\n");
            ((StringBuilder)serializable).append(list);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object2);
            object2 = ((StringBuilder)serializable).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        object2 = new HashMap(7);
        list = serializable;
        serializable = new TableInfo$Column("thumb", "TEXT", false, 0, null, 1);
        list = "thumb";
        ((HashMap)object2).put(list, serializable);
        bl3 = true;
        object8 = serializable;
        serializable = new TableInfo$Column("id", "INTEGER", bl3, 1, null, 1);
        ((HashMap)object2).put(hashSet, serializable);
        boolean bl6 = true;
        boolean bl7 = false;
        Object object9 = null;
        int n11 = 0;
        Collection<String> collection = null;
        int n12 = 1;
        Object object10 = serializable;
        serializable = new TableInfo$Column("res_id", "INTEGER", bl6, 0, null, n12);
        object8 = "res_id";
        ((HashMap)object2).put(object8, serializable);
        int n13 = 0;
        object4 = serializable;
        serializable = new TableInfo$Column("label", "TEXT", false, 0, null, 1);
        object4 = "label";
        ((HashMap)object2).put(object4, serializable);
        object5 = serializable;
        serializable = new TableInfo$Column("label_tw", "TEXT", false, 0, null, 1);
        object5 = "label_tw";
        ((HashMap)object2).put(object5, serializable);
        Object object11 = serializable;
        serializable = new TableInfo$Column("label_en", "TEXT", false, 0, null, 1);
        object11 = "label_en";
        ((HashMap)object2).put(object11, serializable);
        int n14 = 1;
        boolean bl8 = false;
        Object object12 = null;
        Object object13 = serializable;
        serializable = new TableInfo$Column("sort", "INTEGER", n14 != 0, 0, null, (int)(bl6 ? 1 : 0));
        object13 = "sort";
        ((HashMap)object2).put(object13, serializable);
        serializable = new HashSet(0);
        Object object14 = new HashSet(0);
        object10 = "filter_type";
        Object object15 = new TableInfo((String)object10, (Map)object2, (Set)((Object)serializable), (Set)object14);
        object2 = TableInfo.read(supportSQLiteDatabase, "filter_type");
        boolean bl9 = ((TableInfo)object15).equals(object2);
        if (!bl9) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("filter_type(com.zhiyun.cama.data.database.model.filter.FilterType).\n Expected:\n");
            ((StringBuilder)serializable).append(object15);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object2);
            object2 = ((StringBuilder)serializable).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        object2 = new HashMap(15);
        bl8 = true;
        object14 = serializable;
        serializable = new TableInfo$Column("type_id", "INTEGER", bl8, 0, null, 1);
        ((HashMap)object2).put("type_id", serializable);
        n11 = 1;
        object15 = serializable;
        serializable = new TableInfo$Column("size", "INTEGER", true, 0, null, n11);
        ((HashMap)object2).put(object3, serializable);
        int n15 = 1;
        serializable = new TableInfo$Column("path", "TEXT", false, 0, null, n15);
        object14 = "path";
        ((HashMap)object2).put(object14, serializable);
        object15 = serializable;
        serializable = new TableInfo$Column("thumb", "TEXT", false, 0, null, n11);
        ((HashMap)object2).put(list, serializable);
        Object object16 = "hash";
        serializable = new TableInfo$Column((String)object16, "TEXT", false, 0, null, n15);
        object15 = "hash";
        ((HashMap)object2).put(object15, serializable);
        bl6 = true;
        object10 = serializable;
        serializable = new TableInfo$Column("main_sort", "INTEGER", bl6, 0, null, 1);
        ((HashMap)object2).put("main_sort", serializable);
        n12 = 0;
        int n16 = 1;
        serializable = new TableInfo$Column("licensePath", "TEXT", false, 0, null, n16);
        ((HashMap)object2).put("licensePath", serializable);
        serializable = new TableInfo$Column("licenseName", "TEXT", false, 0, null, n16);
        ((HashMap)object2).put("licenseName", serializable);
        bl7 = true;
        serializable = new TableInfo$Column("requiredPrime", "INTEGER", bl7, 0, null, n16);
        object10 = "requiredPrime";
        ((HashMap)object2).put(object10, serializable);
        serializable = new TableInfo$Column("id", "INTEGER", bl7, 1, null, n16);
        ((HashMap)object2).put(hashSet, serializable);
        n15 = 0;
        Object object17 = null;
        Object object18 = null;
        int n17 = 1;
        Object object19 = serializable;
        serializable = new TableInfo$Column("res_id", "INTEGER", true, 0, null, n17);
        ((HashMap)object2).put(object8, serializable);
        bl7 = false;
        n11 = 0;
        serializable = new TableInfo$Column("label", "TEXT", false, 0, null, n16);
        ((HashMap)object2).put(object4, serializable);
        Object object20 = null;
        object19 = serializable;
        serializable = new TableInfo$Column("label_tw", "TEXT", false, 0, null, n17);
        ((HashMap)object2).put(object5, serializable);
        serializable = new TableInfo$Column("label_en", "TEXT", false, 0, null, n16);
        ((HashMap)object2).put(object11, serializable);
        boolean bl10 = true;
        Object object21 = "sort";
        Object object22 = "INTEGER";
        object19 = serializable;
        serializable = new TableInfo$Column((String)object21, (String)object22, bl10, 0, null, n17);
        ((HashMap)object2).put(object13, serializable);
        serializable = new HashSet(0);
        object12 = object10;
        n14 = 1;
        object6 = new HashSet(n14);
        Object object23 = new String[]{"type_id"};
        object9 = list;
        list = Arrays.asList(object23);
        object23 = object13;
        object13 = "index_filter_data_type_id";
        collection = object11;
        bl3 = false;
        object10 = new TableInfo$Index((String)object13, false, list);
        ((HashSet)object6).add(object10);
        object11 = "filter_data";
        list = new List<String>((String)object11, (Map)object2, serializable, object6);
        object2 = TableInfo.read(supportSQLiteDatabase, "filter_data");
        boolean bl11 = ((TableInfo)((Object)list)).equals(object2);
        if (!bl11) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("filter_data(com.zhiyun.cama.data.database.model.filter.FilterData).\n Expected:\n");
            ((StringBuilder)serializable).append(list);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object2);
            object2 = ((StringBuilder)serializable).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        object2 = new HashMap(11);
        n15 = 1;
        object6 = new TableInfo$Column("hash", "TEXT", true, 1, null, n15);
        ((HashMap)object2).put(object15, object6);
        int n18 = 0;
        int n19 = 0;
        int n20 = 1;
        object18 = object6;
        object6 = new TableInfo$Column("name", "TEXT", false, 0, null, n20);
        list = "name";
        ((HashMap)object2).put(list, object6);
        object6 = new TableInfo$Column("category", "TEXT", false, 0, null, n15);
        object11 = "category";
        ((HashMap)object2).put(object11, object6);
        object6 = new TableInfo$Column("mime", "TEXT", false, 0, null, n15);
        object13 = "mime";
        ((HashMap)object2).put(object13, object6);
        object6 = new TableInfo$Column("size", "INTEGER", true, 0, null, n15);
        ((HashMap)object2).put(object3, object6);
        object18 = object6;
        object6 = new TableInfo$Column("url", "TEXT", false, 0, null, n20);
        object10 = "url";
        ((HashMap)object2).put(object10, object6);
        object6 = new TableInfo$Column("path", "TEXT", false, 0, null, n15);
        ((HashMap)object2).put(object14, object6);
        boolean bl12 = true;
        String string2 = "INTEGER";
        object18 = object6;
        object6 = new TableInfo$Column("download_timestamp", string2, bl12, 0, null, n20);
        serializable = "download_timestamp";
        ((HashMap)object2).put(serializable, object6);
        bl10 = false;
        object16 = object6;
        object6 = new TableInfo$Column("ext_lic_url", "TEXT", false, 0, null, 1);
        object16 = serializable;
        serializable = "ext_lic_url";
        ((HashMap)object2).put(serializable, object6);
        n15 = 0;
        object19 = object6;
        object6 = new TableInfo$Column("ext_lic_name", "TEXT", false, 0, null, 1);
        object19 = serializable;
        serializable = "ext_lic_name";
        ((HashMap)object2).put(serializable, object6);
        object18 = null;
        n17 = 0;
        String string3 = null;
        boolean bl13 = true;
        object21 = object6;
        object6 = new TableInfo$Column("ext_lic_path", "TEXT", false, 0, null, (int)(bl13 ? 1 : 0));
        object21 = serializable;
        serializable = "ext_lic_path";
        ((HashMap)object2).put(serializable, object6);
        object22 = serializable;
        boolean bl14 = false;
        object6 = new HashSet(0);
        object20 = object10;
        object10 = new HashSet(0);
        object17 = object13;
        object13 = "filter_file";
        serializable = new TableInfo((String)object13, (Map)object2, (Set)object6, (Set)object10);
        object2 = TableInfo.read(supportSQLiteDatabase, "filter_file");
        bl5 = ((TableInfo)((Object)serializable)).equals(object2);
        if (!bl5) {
            hashSet = new HashSet<Object>();
            ((StringBuilder)((Object)hashSet)).append("filter_file(com.zhiyun.cama.data.database.model.filter.FilterFile).\n Expected:\n");
            ((StringBuilder)((Object)hashSet)).append(serializable);
            ((StringBuilder)((Object)hashSet)).append((String)object7);
            ((StringBuilder)((Object)hashSet)).append(object2);
            object2 = ((StringBuilder)((Object)hashSet)).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        object2 = new HashMap(8);
        n19 = 0;
        n20 = 1;
        object18 = serializable;
        serializable = new TableInfo$Column("cover_url", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put("cover_url", serializable);
        bl12 = true;
        object18 = serializable;
        serializable = new TableInfo$Column("song_count", "INTEGER", bl12, 0, null, n20);
        ((HashMap)object2).put("song_count", serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("id", "INTEGER", bl12, 1, null, n20);
        ((HashMap)object2).put(hashSet, serializable);
        int n21 = 0;
        int n22 = 0;
        int n23 = 1;
        Object object24 = serializable;
        serializable = new TableInfo$Column("res_id", "INTEGER", true, 0, null, n23);
        ((HashMap)object2).put(object8, serializable);
        n18 = 0;
        object18 = serializable;
        serializable = new TableInfo$Column("label", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put(object4, serializable);
        boolean bl15 = false;
        String string4 = "label_tw";
        String string5 = "TEXT";
        object24 = serializable;
        serializable = new TableInfo$Column(string4, string5, false, 0, null, n23);
        ((HashMap)object2).put(object5, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("label_en", "TEXT", false, 0, null, n20);
        object6 = collection;
        ((HashMap)object2).put(collection, serializable);
        bl12 = true;
        string3 = "sort";
        string2 = "INTEGER";
        object18 = serializable;
        serializable = new TableInfo$Column(string3, string2, bl12, 0, null, n20);
        object13 = object23;
        ((HashMap)object2).put(object23, serializable);
        n14 = 0;
        serializable = new HashSet(0);
        object23 = object11;
        object11 = new HashSet(0);
        collection = list;
        list = "album_data";
        object10 = new TableInfo((String)((Object)list), (Map)object2, (Set)((Object)serializable), (Set)object11);
        object2 = TableInfo.read(supportSQLiteDatabase, "album_data");
        boolean bl16 = ((TableInfo)object10).equals(object2);
        if (!bl16) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("album_data(com.zhiyun.cama.data.database.model.music.AlbumData).\n Expected:\n");
            ((StringBuilder)serializable).append(object10);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object2);
            object2 = ((StringBuilder)serializable).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        object2 = new HashMap(14);
        n19 = 0;
        n20 = 1;
        object18 = serializable;
        serializable = new TableInfo$Column("album_id", "INTEGER", false, 0, null, n20);
        ((HashMap)object2).put("album_id", serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("thumb", "TEXT", false, 0, null, n20);
        list = object9;
        ((HashMap)object2).put(object9, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("hash", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put(object15, serializable);
        n21 = 0;
        n22 = 0;
        n23 = 1;
        object24 = serializable;
        serializable = new TableInfo$Column("duration", "INTEGER", true, 0, null, n23);
        ((HashMap)object2).put("duration", serializable);
        bl12 = true;
        object18 = serializable;
        serializable = new TableInfo$Column("size", "INTEGER", bl12, 0, null, n20);
        ((HashMap)object2).put(object3, serializable);
        object24 = serializable;
        serializable = new TableInfo$Column("path", "TEXT", false, 0, null, n23);
        ((HashMap)object2).put(object14, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("file_download_timestamp", "INTEGER", bl12, 0, null, n20);
        ((HashMap)object2).put("file_download_timestamp", serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("requiredPrime", "INTEGER", bl12, 0, null, n20);
        object11 = object12;
        ((HashMap)object2).put(object12, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("id", "INTEGER", bl12, 1, null, n20);
        ((HashMap)object2).put(hashSet, serializable);
        object24 = serializable;
        serializable = new TableInfo$Column("res_id", "INTEGER", true, 0, null, n23);
        ((HashMap)object2).put(object8, serializable);
        bl12 = false;
        n18 = 0;
        object18 = serializable;
        serializable = new TableInfo$Column("label", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put(object4, serializable);
        object24 = serializable;
        serializable = new TableInfo$Column("label_tw", "TEXT", false, 0, null, n23);
        ((HashMap)object2).put(object5, serializable);
        string3 = "label_en";
        string2 = "TEXT";
        object18 = serializable;
        serializable = new TableInfo$Column(string3, string2, false, 0, null, n20);
        ((HashMap)object2).put(object6, serializable);
        bl15 = true;
        string4 = "sort";
        string5 = "INTEGER";
        object24 = serializable;
        serializable = new TableInfo$Column(string4, string5, bl15, 0, null, n23);
        ((HashMap)object2).put(object13, serializable);
        n14 = 0;
        serializable = new HashSet(0);
        object12 = object13;
        object13 = new HashSet(0);
        object9 = object6;
        object6 = "music_data";
        object10 = new TableInfo((String)object6, (Map)object2, (Set)((Object)serializable), (Set)object13);
        object2 = TableInfo.read(supportSQLiteDatabase, "music_data");
        boolean bl17 = ((TableInfo)object10).equals(object2);
        if (!bl17) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("music_data(com.zhiyun.cama.data.database.model.music.MusicData).\n Expected:\n");
            ((StringBuilder)serializable).append(object10);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object2);
            object2 = ((StringBuilder)serializable).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        object2 = new HashMap(11);
        n20 = 1;
        object18 = serializable;
        serializable = new TableInfo$Column("hash", "TEXT", true, 1, null, n20);
        ((HashMap)object2).put(object15, serializable);
        n23 = 1;
        object24 = serializable;
        serializable = new TableInfo$Column("name", "TEXT", false, 0, null, n23);
        object6 = collection;
        ((HashMap)object2).put(collection, serializable);
        bl12 = false;
        object18 = serializable;
        serializable = new TableInfo$Column("category", "TEXT", false, 0, null, n20);
        object13 = object23;
        ((HashMap)object2).put(object23, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("mime", "TEXT", false, 0, null, n20);
        object10 = object17;
        ((HashMap)object2).put(object17, serializable);
        bl13 = true;
        object17 = serializable;
        serializable = new TableInfo$Column("size", "INTEGER", bl13, 0, null, 1);
        ((HashMap)object2).put(object3, serializable);
        Object object25 = serializable;
        serializable = new TableInfo$Column("url", "TEXT", false, 0, null, 1);
        object17 = object10;
        object10 = object20;
        ((HashMap)object2).put(object20, serializable);
        n18 = 0;
        n19 = 0;
        n20 = 1;
        object18 = serializable;
        serializable = new TableInfo$Column("path", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put(object14, serializable);
        bl15 = true;
        n21 = 0;
        n22 = 0;
        string4 = "download_timestamp";
        string5 = "INTEGER";
        object24 = serializable;
        serializable = new TableInfo$Column(string4, string5, bl15, 0, null, n23);
        object10 = object16;
        ((HashMap)object2).put(object16, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("ext_lic_url", "TEXT", false, 0, null, n20);
        object10 = object19;
        ((HashMap)object2).put(object19, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("ext_lic_name", "TEXT", false, 0, null, n20);
        object10 = object21;
        ((HashMap)object2).put(object21, serializable);
        string3 = "ext_lic_path";
        string2 = "TEXT";
        object18 = serializable;
        serializable = new TableInfo$Column(string3, string2, false, 0, null, n20);
        object10 = object22;
        ((HashMap)object2).put(object22, serializable);
        n14 = 0;
        serializable = new HashSet(0);
        object13 = new HashSet(0);
        object6 = "music_file";
        object10 = new TableInfo((String)object6, (Map)object2, (Set)((Object)serializable), (Set)object13);
        object2 = TableInfo.read(supportSQLiteDatabase, "music_file");
        boolean bl18 = ((TableInfo)object10).equals(object2);
        if (!bl18) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("music_file(com.zhiyun.cama.data.database.model.music.MusicFile).\n Expected:\n");
            ((StringBuilder)serializable).append(object10);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object2);
            object2 = ((StringBuilder)serializable).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        object2 = new HashMap(11);
        n18 = 0;
        n19 = 0;
        n20 = 1;
        object18 = serializable;
        serializable = new TableInfo$Column("size", "INTEGER", true, 0, null, n20);
        ((HashMap)object2).put(object3, serializable);
        n22 = 0;
        n23 = 1;
        object24 = serializable;
        serializable = new TableInfo$Column("path", "TEXT", false, 0, null, n23);
        ((HashMap)object2).put(object14, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("hash", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put(object15, serializable);
        object24 = serializable;
        serializable = new TableInfo$Column("thumb", "TEXT", false, 0, null, n23);
        ((HashMap)object2).put(list, serializable);
        bl12 = true;
        object18 = serializable;
        serializable = new TableInfo$Column("requiredPrime", "INTEGER", bl12, 0, null, n20);
        ((HashMap)object2).put(object11, serializable);
        object24 = serializable;
        serializable = new TableInfo$Column("id", "INTEGER", true, 1, null, n23);
        ((HashMap)object2).put(hashSet, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("res_id", "INTEGER", bl12, 0, null, n20);
        ((HashMap)object2).put(object8, serializable);
        bl15 = false;
        n21 = 0;
        object24 = serializable;
        serializable = new TableInfo$Column("label", "TEXT", false, 0, null, n23);
        ((HashMap)object2).put(object4, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("label_tw", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put(object5, serializable);
        string4 = "label_en";
        string5 = "TEXT";
        object24 = serializable;
        serializable = new TableInfo$Column(string4, string5, false, 0, null, n23);
        object6 = object9;
        ((HashMap)object2).put(object9, serializable);
        bl12 = true;
        string3 = "sort";
        string2 = "INTEGER";
        object18 = serializable;
        serializable = new TableInfo$Column(string3, string2, bl12, 0, null, n20);
        object13 = object12;
        ((HashMap)object2).put(object12, serializable);
        n14 = 0;
        serializable = new HashSet(0);
        object13 = new HashSet(0);
        object6 = "font_data";
        object10 = new TableInfo((String)object6, (Map)object2, (Set)((Object)serializable), (Set)object13);
        object2 = TableInfo.read(supportSQLiteDatabase, "font_data");
        boolean bl19 = ((TableInfo)object10).equals(object2);
        if (!bl19) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("font_data(com.zhiyun.cama.data.database.model.font.FontData).\n Expected:\n");
            ((StringBuilder)serializable).append(object10);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object2);
            object2 = ((StringBuilder)serializable).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        object2 = new HashMap(11);
        n20 = 1;
        object18 = serializable;
        serializable = new TableInfo$Column("hash", "TEXT", true, 1, null, n20);
        ((HashMap)object2).put(object15, serializable);
        n23 = 1;
        object24 = serializable;
        serializable = new TableInfo$Column("name", "TEXT", false, 0, null, n23);
        object6 = collection;
        ((HashMap)object2).put(collection, serializable);
        bl12 = false;
        object18 = serializable;
        serializable = new TableInfo$Column("category", "TEXT", false, 0, null, n20);
        object13 = object23;
        ((HashMap)object2).put(object23, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("mime", "TEXT", false, 0, null, n20);
        object10 = object17;
        ((HashMap)object2).put(object17, serializable);
        bl13 = true;
        object17 = serializable;
        serializable = new TableInfo$Column("size", "INTEGER", bl13, 0, null, 1);
        ((HashMap)object2).put(object3, serializable);
        object25 = serializable;
        serializable = new TableInfo$Column("url", "TEXT", false, 0, null, 1);
        object17 = object10;
        object10 = object20;
        ((HashMap)object2).put(object20, serializable);
        n18 = 0;
        n19 = 0;
        n20 = 1;
        object18 = serializable;
        serializable = new TableInfo$Column("path", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put(object14, serializable);
        bl15 = true;
        n21 = 0;
        n22 = 0;
        string4 = "download_timestamp";
        string5 = "INTEGER";
        object24 = serializable;
        serializable = new TableInfo$Column(string4, string5, bl15, 0, null, n23);
        object10 = object16;
        ((HashMap)object2).put(object16, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("ext_lic_url", "TEXT", false, 0, null, n20);
        object10 = object19;
        ((HashMap)object2).put(object19, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("ext_lic_name", "TEXT", false, 0, null, n20);
        object10 = object21;
        ((HashMap)object2).put(object21, serializable);
        string3 = "ext_lic_path";
        string2 = "TEXT";
        object18 = serializable;
        serializable = new TableInfo$Column(string3, string2, false, 0, null, n20);
        object10 = object22;
        ((HashMap)object2).put(object22, serializable);
        n14 = 0;
        serializable = new HashSet(0);
        object13 = new HashSet(0);
        object6 = "font_file";
        object10 = new TableInfo((String)object6, (Map)object2, (Set)((Object)serializable), (Set)object13);
        object2 = TableInfo.read(supportSQLiteDatabase, "font_file");
        boolean bl20 = ((TableInfo)object10).equals(object2);
        if (!bl20) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("font_file(com.zhiyun.cama.data.database.model.font.FontFile).\n Expected:\n");
            ((StringBuilder)serializable).append(object10);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object2);
            object2 = ((StringBuilder)serializable).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        object2 = new HashMap(13);
        n18 = 0;
        n19 = 0;
        n20 = 1;
        object18 = serializable;
        serializable = new TableInfo$Column("size", "INTEGER", true, 0, null, n20);
        ((HashMap)object2).put(object3, serializable);
        n22 = 0;
        n23 = 1;
        object24 = serializable;
        serializable = new TableInfo$Column("path", "TEXT", false, 0, null, n23);
        ((HashMap)object2).put(object14, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("hash", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put(object15, serializable);
        object24 = serializable;
        serializable = new TableInfo$Column("thumb", "TEXT", false, 0, null, n23);
        ((HashMap)object2).put(list, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("licensePath", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put("licensePath", serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("licenseName", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put("licenseName", serializable);
        bl12 = true;
        object18 = serializable;
        serializable = new TableInfo$Column("requiredPrime", "INTEGER", bl12, 0, null, n20);
        ((HashMap)object2).put(object11, serializable);
        object24 = serializable;
        serializable = new TableInfo$Column("id", "INTEGER", true, 1, null, n23);
        ((HashMap)object2).put(hashSet, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("res_id", "INTEGER", bl12, 0, null, n20);
        ((HashMap)object2).put(object8, serializable);
        bl15 = false;
        n21 = 0;
        object24 = serializable;
        serializable = new TableInfo$Column("label", "TEXT", false, 0, null, n23);
        ((HashMap)object2).put(object4, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("label_tw", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put(object5, serializable);
        string4 = "label_en";
        string5 = "TEXT";
        object24 = serializable;
        serializable = new TableInfo$Column(string4, string5, false, 0, null, n23);
        object6 = object9;
        ((HashMap)object2).put(object9, serializable);
        bl12 = true;
        string3 = "sort";
        string2 = "INTEGER";
        object18 = serializable;
        serializable = new TableInfo$Column(string3, string2, bl12, 0, null, n20);
        object13 = object12;
        ((HashMap)object2).put(object12, serializable);
        n14 = 0;
        serializable = new HashSet(0);
        object12 = object11;
        object11 = new HashSet(0);
        object9 = list;
        list = "caption_style_data";
        object10 = new TableInfo((String)((Object)list), (Map)object2, (Set)((Object)serializable), (Set)object11);
        object2 = TableInfo.read(supportSQLiteDatabase, "caption_style_data");
        boolean bl21 = ((TableInfo)object10).equals(object2);
        if (!bl21) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("caption_style_data(com.zhiyun.cama.data.database.model.font.CaptionStyleData).\n Expected:\n");
            ((StringBuilder)serializable).append(object10);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object2);
            object2 = ((StringBuilder)serializable).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        object2 = new HashMap(11);
        n20 = 1;
        object18 = serializable;
        serializable = new TableInfo$Column("hash", "TEXT", true, 1, null, n20);
        ((HashMap)object2).put(object15, serializable);
        n23 = 1;
        object24 = serializable;
        serializable = new TableInfo$Column("name", "TEXT", false, 0, null, n23);
        list = collection;
        ((HashMap)object2).put(collection, serializable);
        bl12 = false;
        object18 = serializable;
        serializable = new TableInfo$Column("category", "TEXT", false, 0, null, n20);
        object11 = object23;
        ((HashMap)object2).put(object23, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("mime", "TEXT", false, 0, null, n20);
        object10 = object17;
        ((HashMap)object2).put(object17, serializable);
        bl13 = true;
        object17 = serializable;
        serializable = new TableInfo$Column("size", "INTEGER", bl13, 0, null, 1);
        ((HashMap)object2).put(object3, serializable);
        object25 = serializable;
        serializable = new TableInfo$Column("url", "TEXT", false, 0, null, 1);
        object17 = object10;
        object10 = object20;
        ((HashMap)object2).put(object20, serializable);
        n18 = 0;
        n19 = 0;
        n20 = 1;
        object18 = serializable;
        serializable = new TableInfo$Column("path", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put(object14, serializable);
        bl15 = true;
        n21 = 0;
        n22 = 0;
        string4 = "download_timestamp";
        string5 = "INTEGER";
        object24 = serializable;
        serializable = new TableInfo$Column(string4, string5, bl15, 0, null, n23);
        object10 = object16;
        ((HashMap)object2).put(object16, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("ext_lic_url", "TEXT", false, 0, null, n20);
        object10 = object19;
        ((HashMap)object2).put(object19, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("ext_lic_name", "TEXT", false, 0, null, n20);
        object10 = object21;
        ((HashMap)object2).put(object21, serializable);
        string3 = "ext_lic_path";
        string2 = "TEXT";
        object18 = serializable;
        serializable = new TableInfo$Column(string3, string2, false, 0, null, n20);
        object10 = object22;
        ((HashMap)object2).put(object22, serializable);
        n14 = 0;
        serializable = new HashSet(0);
        object11 = new HashSet(0);
        collection = object15;
        object15 = "caption_style_file";
        object10 = new TableInfo((String)object15, (Map)object2, (Set)((Object)serializable), (Set)object11);
        object2 = TableInfo.read(supportSQLiteDatabase, "caption_style_file");
        boolean bl22 = ((TableInfo)object10).equals(object2);
        if (!bl22) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("caption_style_file(com.zhiyun.cama.data.database.model.font.CaptionStyleFile).\n Expected:\n");
            ((StringBuilder)serializable).append(object10);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object2);
            object2 = ((StringBuilder)serializable).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        object2 = new HashMap(6);
        n19 = 0;
        n20 = 1;
        object18 = serializable;
        serializable = new TableInfo$Column("id", "INTEGER", true, 1, null, n20);
        ((HashMap)object2).put(hashSet, serializable);
        n21 = 0;
        n22 = 0;
        n23 = 1;
        object24 = serializable;
        serializable = new TableInfo$Column("res_id", "INTEGER", true, 0, null, n23);
        ((HashMap)object2).put(object8, serializable);
        bl12 = false;
        n18 = 0;
        object18 = serializable;
        serializable = new TableInfo$Column("label", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put(object4, serializable);
        object24 = serializable;
        serializable = new TableInfo$Column("label_tw", "TEXT", false, 0, null, n23);
        ((HashMap)object2).put(object5, serializable);
        string3 = "label_en";
        string2 = "TEXT";
        object18 = serializable;
        serializable = new TableInfo$Column(string3, string2, false, 0, null, n20);
        ((HashMap)object2).put(object6, serializable);
        bl15 = true;
        string4 = "sort";
        string5 = "INTEGER";
        object24 = serializable;
        serializable = new TableInfo$Column(string4, string5, bl15, 0, null, n23);
        ((HashMap)object2).put(object13, serializable);
        bl3 = false;
        serializable = new HashSet(0);
        object15 = new HashSet(0);
        object10 = "sticker_type";
        object11 = new TableInfo((String)object10, (Map)object2, (Set)((Object)serializable), (Set)object15);
        object2 = TableInfo.read(supportSQLiteDatabase, "sticker_type");
        boolean bl23 = ((TableInfo)object11).equals(object2);
        if (!bl23) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("sticker_type(com.zhiyun.cama.data.database.model.sticker.StickerType).\n Expected:\n");
            ((StringBuilder)serializable).append(object11);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object2);
            object2 = ((StringBuilder)serializable).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        object2 = new HashMap(17);
        bl12 = true;
        n19 = 0;
        n20 = 1;
        object18 = serializable;
        serializable = new TableInfo$Column("type_id", "INTEGER", bl12, 0, null, n20);
        ((HashMap)object2).put("type_id", serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("size", "INTEGER", bl12, 0, null, n20);
        ((HashMap)object2).put(object3, serializable);
        n21 = 0;
        n22 = 0;
        n23 = 1;
        object24 = serializable;
        serializable = new TableInfo$Column("name", "TEXT", false, 0, null, n23);
        ((HashMap)object2).put(list, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("scale", "REAL", bl12, 0, null, n20);
        ((HashMap)object2).put("scale", serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("thumb", "TEXT", false, 0, null, n20);
        object11 = object9;
        ((HashMap)object2).put(object9, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("little_thumb", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put("little_thumb", serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("path", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put(object14, serializable);
        object24 = serializable;
        serializable = new TableInfo$Column("hash", "TEXT", false, 0, null, n23);
        object15 = collection;
        ((HashMap)object2).put(collection, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("licensePath", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put("licensePath", serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("licenseName", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put("licenseName", serializable);
        bl12 = true;
        object18 = serializable;
        serializable = new TableInfo$Column("requiredPrime", "INTEGER", bl12, 0, null, n20);
        object10 = object12;
        ((HashMap)object2).put(object12, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("id", "INTEGER", bl12, 1, null, n20);
        ((HashMap)object2).put(hashSet, serializable);
        object24 = serializable;
        serializable = new TableInfo$Column("res_id", "INTEGER", true, 0, null, n23);
        ((HashMap)object2).put(object8, serializable);
        bl12 = false;
        n18 = 0;
        object18 = serializable;
        serializable = new TableInfo$Column("label", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put(object4, serializable);
        object24 = serializable;
        serializable = new TableInfo$Column("label_tw", "TEXT", false, 0, null, n23);
        ((HashMap)object2).put(object5, serializable);
        string3 = "label_en";
        string2 = "TEXT";
        object18 = serializable;
        serializable = new TableInfo$Column(string3, string2, false, 0, null, n20);
        ((HashMap)object2).put(object6, serializable);
        bl15 = true;
        string4 = "sort";
        string5 = "INTEGER";
        object24 = serializable;
        serializable = new TableInfo$Column(string4, string5, bl15, 0, null, n23);
        ((HashMap)object2).put(object13, serializable);
        object12 = object13;
        serializable = new HashSet(0);
        collection = object6;
        object6 = new HashSet(0);
        object9 = object5;
        object5 = "sticker_data";
        object13 = new TableInfo((String)object5, (Map)object2, (Set)((Object)serializable), (Set)object6);
        object2 = TableInfo.read(supportSQLiteDatabase, "sticker_data");
        boolean bl24 = ((TableInfo)object13).equals(object2);
        if (!bl24) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("sticker_data(com.zhiyun.cama.data.database.model.sticker.StickerData).\n Expected:\n");
            ((StringBuilder)serializable).append(object13);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object2);
            object2 = ((StringBuilder)serializable).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        object2 = new HashMap(11);
        n20 = 1;
        object18 = serializable;
        serializable = new TableInfo$Column("hash", "TEXT", true, 1, null, n20);
        ((HashMap)object2).put(object15, serializable);
        n23 = 1;
        object24 = serializable;
        serializable = new TableInfo$Column("name", "TEXT", false, 0, null, n23);
        ((HashMap)object2).put(list, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("category", "TEXT", false, 0, null, n20);
        object6 = object23;
        ((HashMap)object2).put(object23, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("mime", "TEXT", false, 0, null, n20);
        object5 = object17;
        ((HashMap)object2).put(object17, serializable);
        object17 = serializable;
        serializable = new TableInfo$Column("size", "INTEGER", true, 0, null, 1);
        ((HashMap)object2).put(object3, serializable);
        string5 = null;
        n22 = 1;
        string4 = "TEXT";
        object25 = serializable;
        serializable = new TableInfo$Column("url", string4, false, 0, null, n22);
        object13 = object20;
        ((HashMap)object2).put(object20, serializable);
        n17 = 0;
        bl13 = false;
        string2 = null;
        object20 = serializable;
        serializable = new TableInfo$Column("path", "TEXT", false, 0, null, 1);
        ((HashMap)object2).put(object14, serializable);
        boolean bl25 = true;
        bl15 = false;
        n21 = 1;
        object25 = "download_timestamp";
        object24 = "INTEGER";
        serializable = new TableInfo$Column((String)object25, (String)object24, bl25, 0, null, n21);
        object20 = object13;
        object13 = object16;
        ((HashMap)object2).put(object16, serializable);
        bl12 = false;
        n18 = 0;
        n19 = 1;
        object17 = serializable;
        serializable = new TableInfo$Column("ext_lic_url", "TEXT", false, 0, null, n19);
        object13 = object19;
        ((HashMap)object2).put(object19, serializable);
        object17 = serializable;
        serializable = new TableInfo$Column("ext_lic_name", "TEXT", false, 0, null, n19);
        object13 = object21;
        ((HashMap)object2).put(object21, serializable);
        object18 = "ext_lic_path";
        string3 = "TEXT";
        object17 = serializable;
        serializable = new TableInfo$Column((String)object18, string3, false, 0, null, n19);
        object13 = object22;
        ((HashMap)object2).put(object22, serializable);
        serializable = new HashSet(0);
        object17 = object5;
        object5 = new HashSet(0);
        object6 = "sticker_file";
        object13 = new TableInfo((String)object6, (Map)object2, (Set)((Object)serializable), (Set)object5);
        object2 = TableInfo.read(supportSQLiteDatabase, "sticker_file");
        boolean bl26 = ((TableInfo)object13).equals(object2);
        if (!bl26) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("sticker_file(com.zhiyun.cama.data.database.model.sticker.StickerFile).\n Expected:\n");
            ((StringBuilder)serializable).append(object13);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object2);
            object2 = ((StringBuilder)serializable).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        object2 = new HashMap(15);
        n18 = 0;
        n19 = 0;
        n20 = 1;
        object18 = serializable;
        serializable = new TableInfo$Column("size", "INTEGER", true, 0, null, n20);
        ((HashMap)object2).put(object3, serializable);
        n22 = 0;
        n23 = 1;
        object24 = serializable;
        serializable = new TableInfo$Column("path", "TEXT", false, 0, null, n23);
        ((HashMap)object2).put(object14, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("hash", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put(object15, serializable);
        object24 = serializable;
        serializable = new TableInfo$Column("thumb", "TEXT", false, 0, null, n23);
        ((HashMap)object2).put(object11, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("littleThumb", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put("littleThumb", serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("transitionType", "INTEGER", true, 0, null, n20);
        ((HashMap)object2).put("transitionType", serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("licensePath", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put("licensePath", serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("licenseName", "TEXT", false, 0, null, n20);
        ((HashMap)object2).put("licenseName", serializable);
        bl12 = true;
        object18 = serializable;
        serializable = new TableInfo$Column("requiredPrime", "INTEGER", bl12, 0, null, n20);
        ((HashMap)object2).put(object10, serializable);
        object24 = serializable;
        serializable = new TableInfo$Column("id", "INTEGER", true, 1, null, n23);
        ((HashMap)object2).put(hashSet, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("res_id", "INTEGER", bl12, 0, null, n20);
        ((HashMap)object2).put(object8, serializable);
        bl15 = false;
        n21 = 0;
        string4 = "label";
        string5 = "TEXT";
        object24 = serializable;
        serializable = new TableInfo$Column(string4, string5, false, 0, null, n23);
        ((HashMap)object2).put(object4, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("label_tw", "TEXT", false, 0, null, n20);
        object6 = object9;
        ((HashMap)object2).put(object9, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("label_en", "TEXT", false, 0, null, n20);
        object6 = collection;
        ((HashMap)object2).put(collection, serializable);
        bl12 = true;
        string3 = "sort";
        string2 = "INTEGER";
        object18 = serializable;
        serializable = new TableInfo$Column(string3, string2, bl12, 0, null, n20);
        object6 = object12;
        ((HashMap)object2).put(object12, serializable);
        bl5 = false;
        serializable = new HashSet(0);
        object8 = new HashSet(0);
        object4 = "transition_data";
        object6 = new TableInfo((String)object4, (Map)object2, (Set)((Object)serializable), (Set)object8);
        object2 = TableInfo.read(supportSQLiteDatabase, "transition_data");
        boolean bl27 = ((TableInfo)object6).equals(object2);
        if (!bl27) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("transition_data(com.zhiyun.cama.data.database.model.transition.TransitionData).\n Expected:\n");
            ((StringBuilder)serializable).append(object6);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object2);
            object2 = ((StringBuilder)serializable).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        object2 = new HashMap(11);
        n20 = 1;
        object18 = serializable;
        serializable = new TableInfo$Column("hash", "TEXT", true, 1, null, n20);
        ((HashMap)object2).put(object15, serializable);
        n23 = 1;
        object24 = serializable;
        serializable = new TableInfo$Column("name", "TEXT", false, 0, null, n23);
        ((HashMap)object2).put(list, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("category", "TEXT", false, 0, null, n20);
        object6 = object23;
        ((HashMap)object2).put(object23, serializable);
        object18 = serializable;
        serializable = new TableInfo$Column("mime", "TEXT", false, 0, null, n20);
        object6 = object17;
        ((HashMap)object2).put(object17, serializable);
        n19 = 1;
        object17 = serializable;
        serializable = new TableInfo$Column("size", "INTEGER", true, 0, null, n19);
        ((HashMap)object2).put(object3, serializable);
        string5 = null;
        n22 = 1;
        string4 = "TEXT";
        object25 = serializable;
        serializable = new TableInfo$Column("url", string4, false, 0, null, n22);
        object3 = object20;
        ((HashMap)object2).put(object20, serializable);
        n17 = 0;
        string3 = null;
        bl13 = false;
        string2 = null;
        bl12 = false;
        n18 = 1;
        object17 = "path";
        object18 = "TEXT";
        object20 = serializable;
        serializable = new TableInfo$Column((String)object17, (String)object18, false, 0, null, n18);
        ((HashMap)object2).put(object14, serializable);
        bl25 = true;
        bl15 = false;
        n21 = 1;
        object25 = "download_timestamp";
        object24 = "INTEGER";
        serializable = new TableInfo$Column((String)object25, (String)object24, bl25, 0, null, n21);
        object3 = object16;
        ((HashMap)object2).put(object16, serializable);
        object5 = null;
        bl3 = false;
        object11 = null;
        object13 = null;
        n13 = 1;
        list = serializable;
        serializable = new TableInfo$Column("ext_lic_url", "TEXT", false, 0, null, n13);
        object3 = object19;
        ((HashMap)object2).put(object19, serializable);
        list = serializable;
        serializable = new TableInfo$Column("ext_lic_name", "TEXT", false, 0, null, n13);
        object3 = object21;
        ((HashMap)object2).put(object21, serializable);
        object8 = "ext_lic_path";
        object4 = "TEXT";
        list = serializable;
        serializable = new TableInfo$Column((String)object8, (String)object4, false, 0, null, n13);
        object3 = object22;
        ((HashMap)object2).put(object22, serializable);
        int n24 = 0;
        serializable = new HashSet(0);
        object6 = new HashSet(0);
        list = "transition_file";
        object3 = new TableInfo((String)((Object)list), (Map)object2, (Set)((Object)serializable), (Set)object6);
        object2 = TableInfo.read(supportSQLiteDatabase, "transition_file");
        boolean bl28 = ((TableInfo)object3).equals(object2);
        if (!bl28) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("transition_file(com.zhiyun.cama.data.database.model.transition.TransitionFile).\n Expected:\n");
            ((StringBuilder)serializable).append(object3);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object2);
            object2 = ((StringBuilder)serializable).toString();
            object = new RoomOpenHelper$ValidationResult(false, (String)object2);
            return object;
        }
        int n25 = 3;
        object2 = new HashMap(n25);
        object13 = null;
        n13 = 1;
        list = serializable;
        serializable = new TableInfo$Column("id", "INTEGER", true, 1, null, n13);
        ((HashMap)object2).put(hashSet, serializable);
        n11 = 0;
        collection = null;
        n12 = 0;
        n16 = 0;
        object16 = null;
        int n26 = 1;
        object23 = "music_path";
        object9 = "TEXT";
        object12 = serializable;
        serializable = new TableInfo$Column((String)object23, (String)object9, false, 0, null, n26);
        ((HashMap)object2).put("music_path", serializable);
        object5 = null;
        bl3 = false;
        object11 = null;
        object4 = "TEXT";
        list = serializable;
        serializable = new TableInfo$Column("beat_map", (String)object4, false, 0, null, n13);
        ((HashMap)object2).put("beat_map", serializable);
        serializable = new HashSet(0);
        n24 = 1;
        hashSet = new HashSet<Object>(n24);
        bl5 = true;
        list = Arrays.asList("music_path");
        object8 = "index_music_beat_data_music_path";
        object3 = new TableInfo$Index((String)object8, bl5, list);
        hashSet.add(object3);
        object6 = "music_beat_data";
        object3 = new TableInfo((String)object6, (Map)object2, (Set)((Object)serializable), hashSet);
        object2 = "music_beat_data";
        object = TableInfo.read(supportSQLiteDatabase, (String)object2);
        boolean bl29 = ((TableInfo)object3).equals(object);
        if (!bl29) {
            serializable = new StringBuilder();
            ((StringBuilder)serializable).append("music_beat_data(com.zhiyun.cama.data.database.model.music.MusicBeatData).\n Expected:\n");
            ((StringBuilder)serializable).append(object3);
            ((StringBuilder)serializable).append((String)object7);
            ((StringBuilder)serializable).append(object);
            object = ((StringBuilder)serializable).toString();
            object2 = new RoomOpenHelper$ValidationResult(false, (String)object);
            return object2;
        }
        object = new RoomOpenHelper$ValidationResult(true, null);
        return object;
    }
}

