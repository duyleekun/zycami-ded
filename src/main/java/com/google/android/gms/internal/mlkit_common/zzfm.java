/*
 * Decompiled with CFR 0.151.
 */
package com.google.android.gms.internal.mlkit_common;

import com.google.android.gms.internal.mlkit_common.zzfo;
import com.google.android.gms.internal.mlkit_common.zzfp;
import com.google.android.gms.internal.mlkit_common.zzgd;
import java.lang.reflect.Type;

public final class zzfm
extends Enum {
    public static final /* enum */ zzfm zza;
    private static final /* enum */ zzfm zzaa;
    private static final /* enum */ zzfm zzab;
    private static final /* enum */ zzfm zzac;
    private static final /* enum */ zzfm zzad;
    private static final /* enum */ zzfm zzae;
    private static final /* enum */ zzfm zzaf;
    private static final /* enum */ zzfm zzag;
    private static final /* enum */ zzfm zzah;
    private static final /* enum */ zzfm zzai;
    private static final /* enum */ zzfm zzaj;
    private static final /* enum */ zzfm zzak;
    private static final /* enum */ zzfm zzal;
    private static final /* enum */ zzfm zzam;
    private static final /* enum */ zzfm zzan;
    private static final /* enum */ zzfm zzao;
    private static final /* enum */ zzfm zzap;
    private static final /* enum */ zzfm zzaq;
    private static final /* enum */ zzfm zzar;
    private static final /* enum */ zzfm zzas;
    private static final /* enum */ zzfm zzat;
    private static final /* enum */ zzfm zzau;
    private static final /* enum */ zzfm zzav;
    private static final /* enum */ zzfm zzaw;
    private static final /* enum */ zzfm zzax;
    private static final /* enum */ zzfm zzay;
    public static final /* enum */ zzfm zzb;
    private static final zzfm[] zzbe;
    private static final Type[] zzbf;
    private static final /* synthetic */ zzfm[] zzbg;
    private static final /* enum */ zzfm zzc;
    private static final /* enum */ zzfm zzd;
    private static final /* enum */ zzfm zze;
    private static final /* enum */ zzfm zzf;
    private static final /* enum */ zzfm zzg;
    private static final /* enum */ zzfm zzh;
    private static final /* enum */ zzfm zzi;
    private static final /* enum */ zzfm zzj;
    private static final /* enum */ zzfm zzk;
    private static final /* enum */ zzfm zzl;
    private static final /* enum */ zzfm zzm;
    private static final /* enum */ zzfm zzn;
    private static final /* enum */ zzfm zzo;
    private static final /* enum */ zzfm zzp;
    private static final /* enum */ zzfm zzq;
    private static final /* enum */ zzfm zzr;
    private static final /* enum */ zzfm zzs;
    private static final /* enum */ zzfm zzt;
    private static final /* enum */ zzfm zzu;
    private static final /* enum */ zzfm zzv;
    private static final /* enum */ zzfm zzw;
    private static final /* enum */ zzfm zzx;
    private static final /* enum */ zzfm zzy;
    private static final /* enum */ zzfm zzz;
    private final zzgd zzaz;
    private final int zzba;
    private final zzfo zzbb;
    private final Class zzbc;
    private final boolean zzbd;

    static {
        zzfm[] zzfmArray;
        zzfo zzfo2 = zzfo.zza;
        Enum enum_ = zzgd.zze;
        zzfm zzfm22 = null;
        zzfm[] zzfmArray2 = zzfmArray;
        zzfm[] zzfmArray3 = zzfo2;
        zzgd zzgd2 = enum_;
        zzfmArray = new zzfm("DOUBLE", 0, 0, zzfo2, (zzgd)enum_);
        zzc = zzfmArray;
        Object object = zzgd.zzd;
        zzfmArray2 = zzfmArray;
        zzgd2 = object;
        zzfmArray = new zzfm("FLOAT", 1, 1, zzfo2, object);
        zzd = zzfmArray;
        zzgd zzgd3 = zzgd.zzc;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd3;
        zzfmArray = new zzfm("INT64", 2, 2, zzfo2, zzgd3);
        zze = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzfmArray = new zzfm("UINT64", 3, 3, zzfo2, zzgd3);
        zzf = zzfmArray;
        zzgd zzgd4 = zzgd.zzb;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd4;
        zzfmArray = new zzfm("INT32", 4, 4, zzfo2, zzgd4);
        zzg = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd3;
        zzfmArray = new zzfm("FIXED64", 5, 5, zzfo2, zzgd3);
        zzh = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd4;
        zzfmArray = new zzfm("FIXED32", 6, 6, zzfo2, zzgd4);
        zzi = zzfmArray;
        Enum enum_2 = zzgd.zzf;
        zzfmArray2 = zzfmArray;
        zzgd2 = enum_2;
        zzfmArray = new zzfm("BOOL", 7, 7, zzfo2, (zzgd)enum_2);
        zzj = zzfmArray;
        Enum enum_3 = zzgd.zzg;
        zzfmArray2 = zzfmArray;
        zzgd2 = enum_3;
        zzfmArray = new zzfm("STRING", 8, 8, zzfo2, (zzgd)enum_3);
        zzk = zzfmArray;
        zzgd zzgd5 = zzgd.zzj;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd5;
        zzfmArray = new zzfm("MESSAGE", 9, 9, zzfo2, zzgd5);
        zzl = zzfmArray;
        zzgd zzgd6 = zzgd.zzh;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd6;
        zzfmArray = new zzfm("BYTES", 10, 10, zzfo2, zzgd6);
        zzm = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd4;
        zzfmArray = new zzfm("UINT32", 11, 11, zzfo2, zzgd4);
        zzn = zzfmArray;
        zzgd zzgd7 = zzgd.zzi;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd7;
        zzfmArray = new zzfm("ENUM", 12, 12, zzfo2, zzgd7);
        zzo = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd4;
        zzfmArray = new zzfm("SFIXED32", 13, 13, zzfo2, zzgd4);
        zzp = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd3;
        zzfmArray = new zzfm("SFIXED64", 14, 14, zzfo2, zzgd3);
        zzq = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd4;
        zzfmArray = new zzfm("SINT32", 15, 15, zzfo2, zzgd4);
        zzr = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd3;
        zzfmArray = new zzfm("SINT64", 16, 16, zzfo2, zzgd3);
        zzs = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd5;
        zzfmArray = new zzfm("GROUP", 17, 17, zzfo2, zzgd5);
        zzt = zzfmArray;
        zzfo2 = zzfo.zzb;
        zzfmArray2 = zzfmArray;
        zzfmArray3 = zzfo2;
        zzgd2 = enum_;
        zzfmArray = new zzfm("DOUBLE_LIST", 18, 18, zzfo2, (zzgd)enum_);
        zzu = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = object;
        zzfmArray = new zzfm("FLOAT_LIST", 19, 19, zzfo2, object);
        zzv = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd3;
        zzfmArray = new zzfm("INT64_LIST", 20, 20, zzfo2, zzgd3);
        zzw = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzfmArray = new zzfm("UINT64_LIST", 21, 21, zzfo2, zzgd3);
        zzx = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd4;
        zzfmArray = new zzfm("INT32_LIST", 22, 22, zzfo2, zzgd4);
        zzy = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd3;
        zzfmArray = new zzfm("FIXED64_LIST", 23, 23, zzfo2, zzgd3);
        zzz = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd4;
        zzfmArray = new zzfm("FIXED32_LIST", 24, 24, zzfo2, zzgd4);
        zzaa = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = enum_2;
        zzfmArray = new zzfm("BOOL_LIST", 25, 25, zzfo2, (zzgd)enum_2);
        zzab = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = enum_3;
        zzfmArray = new zzfm("STRING_LIST", 26, 26, zzfo2, (zzgd)enum_3);
        zzac = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd5;
        zzfmArray = new zzfm("MESSAGE_LIST", 27, 27, zzfo2, zzgd5);
        zzad = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd6;
        zzfmArray = new zzfm("BYTES_LIST", 28, 28, zzfo2, zzgd6);
        zzae = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd4;
        zzfmArray = new zzfm("UINT32_LIST", 29, 29, zzfo2, zzgd4);
        zzaf = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd7;
        zzfmArray = new zzfm("ENUM_LIST", 30, 30, zzfo2, zzgd7);
        zzag = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd4;
        zzfmArray = new zzfm("SFIXED32_LIST", 31, 31, zzfo2, zzgd4);
        zzah = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd3;
        zzfmArray = new zzfm("SFIXED64_LIST", 32, 32, zzfo2, zzgd3);
        zzai = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd4;
        zzfmArray = new zzfm("SINT32_LIST", 33, 33, zzfo2, zzgd4);
        zzaj = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd3;
        zzfmArray = new zzfm("SINT64_LIST", 34, 34, zzfo2, zzgd3);
        zzak = zzfmArray;
        enum_3 = zzfo.zzc;
        zzfmArray2 = zzfmArray;
        zzfmArray3 = enum_3;
        zzgd2 = enum_;
        zzfmArray = new zzfm("DOUBLE_LIST_PACKED", 35, 35, (zzfo)enum_3, (zzgd)enum_);
        zza = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = object;
        zzfmArray = new zzfm("FLOAT_LIST_PACKED", 36, 36, (zzfo)enum_3, object);
        zzal = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd3;
        zzfmArray = new zzfm("INT64_LIST_PACKED", 37, 37, (zzfo)enum_3, zzgd3);
        zzam = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzfmArray = new zzfm("UINT64_LIST_PACKED", 38, 38, (zzfo)enum_3, zzgd3);
        zzan = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd4;
        zzfmArray = new zzfm("INT32_LIST_PACKED", 39, 39, (zzfo)enum_3, zzgd4);
        zzao = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd3;
        zzfmArray = new zzfm("FIXED64_LIST_PACKED", 40, 40, (zzfo)enum_3, zzgd3);
        zzap = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd4;
        zzfmArray = new zzfm("FIXED32_LIST_PACKED", 41, 41, (zzfo)enum_3, zzgd4);
        zzaq = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = enum_2;
        zzfmArray = new zzfm("BOOL_LIST_PACKED", 42, 42, (zzfo)enum_3, (zzgd)enum_2);
        zzar = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd4;
        zzfmArray = new zzfm("UINT32_LIST_PACKED", 43, 43, (zzfo)enum_3, zzgd4);
        zzas = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd7;
        zzfmArray = new zzfm("ENUM_LIST_PACKED", 44, 44, (zzfo)enum_3, zzgd7);
        zzat = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = zzgd4;
        zzfmArray = new zzfm("SFIXED32_LIST_PACKED", 45, 45, (zzfo)enum_3, zzgd4);
        zzau = zzfmArray;
        enum_ = zzgd.zzc;
        zzfmArray2 = zzfmArray;
        zzgd2 = enum_;
        zzfmArray = new zzfm("SFIXED64_LIST_PACKED", 46, 46, (zzfo)enum_3, (zzgd)enum_);
        zzav = zzfmArray;
        zzgd2 = zzgd.zzb;
        zzfmArray2 = zzfmArray;
        zzfmArray = new zzfm("SINT32_LIST_PACKED", 47, 47, (zzfo)enum_3, zzgd2);
        zzaw = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzgd2 = enum_;
        zzfmArray = new zzfm("SINT64_LIST_PACKED", 48, 48, (zzfo)enum_3, (zzgd)enum_);
        zzb = zzfmArray;
        zzfmArray2 = zzfmArray;
        zzfmArray3 = zzfo2;
        zzgd2 = zzgd5;
        zzfmArray = new zzfm("GROUP_LIST", 49, 49, zzfo2, zzgd5);
        zzax = zzfmArray;
        enum_2 = zzfo.zzd;
        enum_3 = zzgd.zza;
        object = "MAP";
        int n10 = 50;
        int n11 = 50;
        enum_ = zzfmArray2;
        zzfmArray2 = new zzfm((String)object, n10, n11, (zzfo)enum_2, (zzgd)enum_3);
        zzay = zzfmArray2;
        int n12 = 51;
        zzfmArray2 = new zzfm[n12];
        zzfm[] zzfmArray4 = zzc;
        zzfmArray2[0] = zzfmArray4;
        zzfmArray4 = zzd;
        zzfmArray2[1] = zzfmArray4;
        zzfmArray4 = zze;
        zzfmArray2[2] = zzfmArray4;
        zzfmArray4 = zzf;
        zzfmArray2[3] = zzfmArray4;
        zzfmArray4 = zzg;
        zzfmArray2[4] = zzfmArray4;
        zzfmArray4 = zzh;
        zzfmArray2[5] = zzfmArray4;
        zzfmArray4 = zzi;
        zzfmArray2[6] = zzfmArray4;
        zzfmArray4 = zzj;
        zzfmArray2[7] = zzfmArray4;
        zzfmArray4 = zzk;
        zzfmArray2[8] = zzfmArray4;
        zzfmArray4 = zzl;
        zzfmArray2[9] = zzfmArray4;
        zzfmArray4 = zzm;
        zzfmArray2[10] = zzfmArray4;
        zzfmArray4 = zzn;
        zzfmArray2[11] = zzfmArray4;
        zzfmArray4 = zzo;
        zzfmArray2[12] = zzfmArray4;
        zzfmArray4 = zzp;
        zzfmArray2[13] = zzfmArray4;
        zzfmArray4 = zzq;
        zzfmArray2[14] = zzfmArray4;
        zzfmArray4 = zzr;
        zzfmArray2[15] = zzfmArray4;
        zzfmArray4 = zzs;
        zzfmArray2[16] = zzfmArray4;
        zzfmArray4 = zzt;
        zzfmArray2[17] = zzfmArray4;
        zzfmArray4 = zzu;
        zzfmArray2[18] = zzfmArray4;
        zzfmArray4 = zzv;
        zzfmArray2[19] = zzfmArray4;
        zzfmArray4 = zzw;
        zzfmArray2[20] = zzfmArray4;
        zzfmArray4 = zzx;
        zzfmArray2[21] = zzfmArray4;
        zzfmArray4 = zzy;
        zzfmArray2[22] = zzfmArray4;
        zzfmArray4 = zzz;
        zzfmArray2[23] = zzfmArray4;
        zzfmArray4 = zzaa;
        zzfmArray2[24] = zzfmArray4;
        zzfmArray4 = zzab;
        zzfmArray2[25] = zzfmArray4;
        zzfmArray4 = zzac;
        zzfmArray2[26] = zzfmArray4;
        zzfmArray4 = zzad;
        zzfmArray2[27] = zzfmArray4;
        zzfmArray4 = zzae;
        zzfmArray2[28] = zzfmArray4;
        zzfmArray4 = zzaf;
        zzfmArray2[29] = zzfmArray4;
        zzfmArray4 = zzag;
        zzfmArray2[30] = zzfmArray4;
        zzfmArray4 = zzah;
        zzfmArray2[31] = zzfmArray4;
        zzfmArray4 = zzai;
        zzfmArray2[32] = zzfmArray4;
        zzfmArray4 = zzaj;
        zzfmArray2[33] = zzfmArray4;
        zzfmArray4 = zzak;
        zzfmArray2[34] = zzfmArray4;
        zzfmArray4 = zza;
        zzfmArray2[35] = zzfmArray4;
        zzfmArray4 = zzal;
        zzfmArray2[36] = zzfmArray4;
        zzfmArray4 = zzam;
        zzfmArray2[37] = zzfmArray4;
        zzfmArray4 = zzan;
        zzfmArray2[38] = zzfmArray4;
        zzfmArray4 = zzao;
        zzfmArray2[39] = zzfmArray4;
        zzfmArray4 = zzap;
        zzfmArray2[40] = zzfmArray4;
        zzfmArray4 = zzaq;
        zzfmArray2[41] = zzfmArray4;
        zzfmArray4 = zzar;
        zzfmArray2[42] = zzfmArray4;
        zzfmArray4 = zzas;
        zzfmArray2[43] = zzfmArray4;
        zzfmArray4 = zzat;
        zzfmArray2[44] = zzfmArray4;
        zzfmArray4 = zzau;
        zzfmArray2[45] = zzfmArray4;
        zzfmArray4 = zzav;
        zzfmArray2[46] = zzfmArray4;
        zzfmArray4 = zzaw;
        zzfmArray2[47] = zzfmArray4;
        zzfmArray4 = zzb;
        zzfmArray2[48] = zzfmArray4;
        zzfmArray4 = zzax;
        zzfmArray2[49] = zzfmArray4;
        zzfmArray4 = zzay;
        int n13 = 50;
        zzfmArray2[n13] = zzfmArray4;
        zzbg = zzfmArray2;
        zzbf = new Type[0];
        zzfmArray2 = zzfm.values();
        zzfmArray4 = new zzfm[zzfmArray2.length];
        zzbe = zzfmArray4;
        for (zzfm zzfm22 : zzfmArray2) {
            zzfmArray3 = zzbe;
            int n14 = zzfm22.zzba;
            zzfmArray3[n14] = zzfm22;
        }
    }

    /*
     * WARNING - Possible parameter corruption
     * WARNING - void declaration
     */
    private zzfm(zzgd zzgd2) {
        int n11;
        int n12;
        void var5_4;
        int[] nArray;
        void var2_-1;
        void var1_-1;
        this.zzba = (int)zzgd2;
        this.zzbb = nArray;
        this.zzaz = var5_4;
        Object object = zzfp.zza;
        int n13 = nArray.ordinal();
        int n14 = object[n13];
        n13 = 2;
        int n15 = 1;
        if (n14 != n15) {
            if (n14 != n13) {
                n14 = 0;
                object = null;
                this.zzbc = null;
            } else {
                object = var5_4.zza();
                this.zzbc = object;
            }
        } else {
            object = var5_4.zza();
            this.zzbc = object;
        }
        n14 = 0;
        object = null;
        zzfo zzfo2 = zzfo.zza;
        if (nArray != zzfo2 || (n12 = (nArray = zzfp.zzb)[n11 = var5_4.ordinal()]) == n15 || n12 == n13 || n12 == (n13 = 3)) {
            n15 = 0;
        }
        this.zzbd = n15;
    }

    public static zzfm[] values() {
        return (zzfm[])zzbg.clone();
    }

    public final int zza() {
        return this.zzba;
    }
}

