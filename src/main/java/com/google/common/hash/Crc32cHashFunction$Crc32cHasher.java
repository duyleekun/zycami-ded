/*
 * Decompiled with CFR 0.151.
 */
package com.google.common.hash;

import com.google.common.hash.AbstractByteHasher;
import com.google.common.hash.HashCode;

public final class Crc32cHashFunction$Crc32cHasher
extends AbstractByteHasher {
    public static final int[] CRC_TABLE;
    private int crc = 0;

    static {
        int[] nArray;
        int[] nArray2 = nArray = new int[256];
        int[] nArray3 = nArray;
        nArray2[0] = 0;
        nArray3[1] = -227835133;
        nArray2[2] = -516198153;
        nArray3[3] = 324072436;
        nArray2[4] = -946170081;
        nArray3[5] = 904991772;
        nArray2[6] = 648144872;
        nArray3[7] = -724933397;
        nArray2[8] = -1965467441;
        nArray3[9] = 2024987596;
        nArray2[10] = 1809983544;
        nArray3[11] = -1719030981;
        nArray2[12] = 1296289744;
        nArray3[13] = -1087877933;
        nArray2[14] = -1401372889;
        nArray3[15] = 1578318884;
        nArray2[16] = 274646895;
        nArray3[17] = -499825556;
        nArray2[18] = -244992104;
        nArray3[19] = 51262619;
        nArray2[20] = -675000208;
        nArray3[21] = 632279923;
        nArray2[22] = 922689671;
        nArray3[23] = -996891772;
        nArray2[24] = -1702387808;
        nArray3[25] = 1760304291;
        nArray2[26] = 2075979607;
        nArray3[27] = -1982370732;
        nArray2[28] = 1562183871;
        nArray3[29] = -1351185476;
        nArray2[30] = -1138329528;
        nArray3[31] = 1313733451;
        nArray2[32] = 549293790;
        nArray3[33] = -757723683;
        nArray2[34] = -1048117719;
        nArray3[35] = 871202090;
        nArray2[36] = -416867903;
        nArray3[37] = 357341890;
        nArray2[38] = 102525238;
        nArray3[39] = -193467851;
        nArray2[40] = -1436232175;
        nArray3[41] = 1477399826;
        nArray2[42] = 1264559846;
        nArray3[43] = -1187764763;
        nArray2[44] = 1845379342;
        nArray3[45] = -1617575411;
        nArray2[46] = -1933233671;
        nArray3[47] = 2125378298;
        nArray2[48] = 820201905;
        nArray3[49] = -1031222606;
        nArray2[50] = -774358714;
        nArray3[51] = 598981189;
        nArray2[52] = -143008082;
        nArray3[53] = 85089709;
        nArray2[54] = 373468761;
        nArray3[55] = -467063462;
        nArray2[56] = -1170599554;
        nArray3[57] = 1213305469;
        nArray2[58] = 1526817161;
        nArray3[59] = -1452612982;
        nArray2[60] = 2107672161;
        nArray3[61] = -1882520222;
        nArray2[62] = -1667500394;
        nArray3[63] = 1861252501;
        nArray2[64] = 1098587580;
        nArray3[65] = -1290756417;
        nArray2[66] = -1606390453;
        nArray3[67] = 1378610760;
        nArray2[68] = -2032039261;
        nArray3[69] = 1955203488;
        nArray2[70] = 1742404180;
        nArray3[71] = -1783531177;
        nArray2[72] = -878557837;
        nArray3[73] = 969524848;
        nArray2[74] = 714683780;
        nArray3[75] = -655182201;
        nArray2[76] = 205050476;
        nArray3[77] = -28094097;
        nArray2[78] = -318528869;
        nArray3[79] = 526918040;
        nArray2[80] = 1361435347;
        nArray3[81] = -1555146288;
        nArray2[82] = -1340167644;
        nArray3[83] = 1114974503;
        nArray2[84] = -1765847604;
        nArray3[85] = 1691668175;
        nArray2[86] = 2005155131;
        nArray3[87] = -2047885768;
        nArray2[88] = -604208612;
        nArray3[89] = 697762079;
        nArray2[90] = 986182379;
        nArray3[91] = -928222744;
        nArray2[92] = 476452099;
        nArray3[93] = -301099520;
        nArray2[94] = -44210700;
        nArray3[95] = 255256311;
        nArray2[96] = 1640403810;
        nArray3[97] = -1817374623;
        nArray2[98] = -2130844779;
        nArray3[99] = 1922457750;
        nArray2[100] = -1503918979;
        nArray3[101] = 1412925310;
        nArray2[102] = 1197962378;
        nArray3[103] = -1257441399;
        nArray2[104] = -350237779;
        nArray3[105] = 427051182;
        nArray2[106] = 170179418;
        nArray3[107] = -129025959;
        nArray2[108] = 746937522;
        nArray3[109] = -554770511;
        nArray2[110] = -843174843;
        nArray3[111] = 1070968646;
        nArray2[112] = 1905808397;
        nArray3[113] = -2081171698;
        nArray2[114] = -1868356358;
        nArray3[115] = 1657317369;
        nArray2[116] = -1241332974;
        nArray3[117] = 1147748369;
        nArray2[118] = 1463399397;
        nArray3[119] = -1521340186;
        nArray2[120] = -79622974;
        nArray3[121] = 153784257;
        nArray2[122] = 444234805;
        nArray3[123] = -401473738;
        nArray2[124] = 1021025245;
        nArray3[125] = -827320098;
        nArray2[126] = -572462294;
        nArray3[127] = 797665321;
        nArray2[128] = -2097792136;
        nArray3[129] = 1889384571;
        nArray2[130] = 1674398607;
        nArray3[131] = -1851340660;
        nArray2[132] = 1164749927;
        nArray3[133] = -1224265884;
        nArray2[134] = -1537745776;
        nArray3[135] = 1446797203;
        nArray2[136] = 137323447;
        nArray3[137] = -96149324;
        nArray2[138] = -384560320;
        nArray3[139] = 461344835;
        nArray2[140] = -810158936;
        nArray3[141] = 1037989803;
        nArray2[142] = 781091935;
        nArray3[143] = -588970148;
        nArray2[144] = -1834419177;
        nArray3[145] = 1623424788;
        nArray2[146] = 1939049696;
        nArray3[147] = -2114449437;
        nArray2[148] = 1429367560;
        nArray3[149] = -1487280117;
        nArray2[150] = -1274471425;
        nArray3[151] = 1180866812;
        nArray2[152] = 410100952;
        nArray3[153] = -367384613;
        nArray2[154] = -112536529;
        nArray3[155] = 186734380;
        nArray2[156] = -538233913;
        nArray3[157] = 763408580;
        nArray2[158] = 1053836080;
        nArray3[159] = -860110797;
        nArray2[160] = -1572096602;
        nArray3[161] = 1344288421;
        nArray2[162] = 1131464017;
        nArray3[163] = -1323612590;
        nArray2[164] = 1708204729;
        nArray3[165] = -1749376582;
        nArray2[166] = -2065018290;
        nArray3[167] = 1988219213;
        nArray2[168] = 680717673;
        nArray3[169] = -621187478;
        nArray2[170] = -911630946;
        nArray3[171] = 1002577565;
        nArray2[172] = -284657034;
        nArray3[173] = 493091189;
        nArray2[174] = 238226049;
        nArray3[175] = -61306494;
        nArray2[176] = -1307217207;
        nArray3[177] = 1082061258;
        nArray2[178] = 1395524158;
        nArray3[179] = -1589280451;
        nArray2[180] = 1972364758;
        nArray3[181] = -2015074603;
        nArray2[182] = -1800104671;
        nArray3[183] = 1725896226;
        nArray2[184] = 952904198;
        nArray3[185] = -894981883;
        nArray2[186] = -638100751;
        nArray3[187] = 731699698;
        nArray2[188] = -11092711;
        nArray3[189] = 222117402;
        nArray2[190] = 510512622;
        nArray3[191] = -335130899;
        nArray2[192] = -1014159676;
        nArray3[193] = 837199303;
        nArray2[194] = 582374963;
        nArray3[195] = -790768336;
        nArray2[196] = 68661723;
        nArray3[197] = -159632680;
        nArray2[198] = -450051796;
        nArray3[199] = 390545967;
        nArray2[200] = 1230274059;
        nArray3[201] = -1153434360;
        nArray2[202] = -1469116676;
        nArray3[203] = 1510247935;
        nArray2[204] = -1899042540;
        nArray3[205] = 2091215383;
        nArray2[206] = 1878366691;
        nArray3[207] = -1650582816;
        nArray2[208] = -741088853;
        nArray3[209] = 565732008;
        nArray2[210] = 854102364;
        nArray3[211] = -1065151905;
        nArray2[212] = 340358836;
        nArray3[213] = -433916489;
        nArray2[214] = -177076669;
        nArray3[215] = 119113024;
        nArray2[216] = 1493875044;
        nArray3[217] = -1419691417;
        nArray2[218] = -1204696685;
        nArray3[219] = 1247431312;
        nArray2[220] = -1634718085;
        nArray3[221] = 1828433272;
        nArray2[222] = 2141937292;
        nArray3[223] = -1916740209;
        nArray2[224] = -483350502;
        nArray3[225] = 291187481;
        nArray2[226] = 34330861;
        nArray3[227] = -262120466;
        nArray2[228] = 615137029;
        nArray3[229] = -691946490;
        nArray2[230] = -980332558;
        nArray3[231] = 939183345;
        nArray2[232] = 1776939221;
        nArray3[233] = -1685949482;
        nArray2[234] = -1999470558;
        nArray3[235] = 2058945313;
        nArray2[236] = -1368168502;
        nArray3[237] = 1545135305;
        nArray2[238] = 1330124605;
        nArray3[239] = -1121741762;
        nArray2[240] = -210866315;
        nArray3[241] = 17165430;
        nArray2[242] = 307568514;
        nArray3[243] = -532767615;
        nArray2[244] = 888469610;
        nArray3[245] = -962626711;
        nArray2[246] = -707819363;
        nArray3[247] = 665062302;
        nArray2[248] = 2042050490;
        nArray3[249] = -1948470087;
        nArray2[250] = -1735637171;
        nArray3[251] = 1793573966;
        nArray2[252] = -1104306011;
        nArray3[253] = 1279665062;
        nArray2[254] = 1595330642;
        nArray3[255] = -1384295599;
        CRC_TABLE = nArray;
    }

    public HashCode hash() {
        return HashCode.fromInt(this.crc);
    }

    public void update(byte by2) {
        int n10;
        this.crc = n10 = ~this.crc;
        int n11 = n10 >>> 8;
        int[] nArray = CRC_TABLE;
        by2 = (byte)((by2 ^ n10) & 0xFF);
        by2 = (byte)(~(nArray[by2] ^ n11));
        this.crc = by2;
    }
}

