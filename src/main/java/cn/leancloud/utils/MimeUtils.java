/*
 * Decompiled with CFR 0.151.
 */
package cn.leancloud.utils;

import java.util.HashMap;
import java.util.Map;

public final class MimeUtils {
    private static final Map extensionToMimeTypeMap;
    private static final Map mimeTypeToExtensionMap;

    static {
        Object object = new HashMap();
        mimeTypeToExtensionMap = object;
        object = new HashMap();
        extensionToMimeTypeMap = object;
        MimeUtils.add("application/andrew-inset", "ez");
        MimeUtils.add("application/dsptype", "tsp");
        String string2 = "spl";
        MimeUtils.add("application/futuresplash", string2);
        MimeUtils.add("application/hta", "hta");
        MimeUtils.add("application/mac-binhex40", "hqx");
        String string3 = "cpt";
        MimeUtils.add("application/mac-compactpro", string3);
        MimeUtils.add("application/mathematica", "nb");
        MimeUtils.add("application/msaccess", "mdb");
        MimeUtils.add("application/oda", "oda");
        MimeUtils.add("application/ogg", "ogg");
        MimeUtils.add("application/pdf", "pdf");
        MimeUtils.add("application/pgp-keys", "key");
        MimeUtils.add("application/pgp-signature", "pgp");
        MimeUtils.add("application/pics-rules", "prf");
        MimeUtils.add("application/pkix-cert", "cer");
        MimeUtils.add("application/rar", "rar");
        MimeUtils.add("application/rdf+xml", "rdf");
        MimeUtils.add("application/rss+xml", "rss");
        MimeUtils.add("application/zip", "zip");
        MimeUtils.add("application/vnd.android.package-archive", "apk");
        MimeUtils.add("application/vnd.cinderella", "cdy");
        MimeUtils.add("application/vnd.ms-pki.stl", "stl");
        MimeUtils.add("application/vnd.oasis.opendocument.database", "odb");
        MimeUtils.add("application/vnd.oasis.opendocument.formula", "odf");
        MimeUtils.add("application/vnd.oasis.opendocument.graphics", "odg");
        MimeUtils.add("application/vnd.oasis.opendocument.graphics-template", "otg");
        MimeUtils.add("application/vnd.oasis.opendocument.image", "odi");
        MimeUtils.add("application/vnd.oasis.opendocument.spreadsheet", "ods");
        MimeUtils.add("application/vnd.oasis.opendocument.spreadsheet-template", "ots");
        MimeUtils.add("application/vnd.oasis.opendocument.text", "odt");
        MimeUtils.add("application/vnd.oasis.opendocument.text-master", "odm");
        MimeUtils.add("application/vnd.oasis.opendocument.text-template", "ott");
        MimeUtils.add("application/vnd.oasis.opendocument.text-web", "oth");
        MimeUtils.add("application/vnd.google-earth.kml+xml", "kml");
        MimeUtils.add("application/vnd.google-earth.kmz", "kmz");
        object = "application/msword";
        MimeUtils.add((String)object, "doc");
        MimeUtils.add((String)object, "dot");
        MimeUtils.add("application/vnd.openxmlformats-officedocument.wordprocessingml.document", "docx");
        MimeUtils.add("application/vnd.openxmlformats-officedocument.wordprocessingml.template", "dotx");
        MimeUtils.add("application/vnd.ms-excel", "xls");
        MimeUtils.add("application/vnd.ms-excel", "xlt");
        MimeUtils.add("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "xlsx");
        MimeUtils.add("application/vnd.openxmlformats-officedocument.spreadsheetml.template", "xltx");
        object = "application/vnd.ms-powerpoint";
        MimeUtils.add((String)object, "ppt");
        MimeUtils.add((String)object, "pot");
        MimeUtils.add((String)object, "pps");
        MimeUtils.add("application/vnd.openxmlformats-officedocument.presentationml.presentation", "pptx");
        MimeUtils.add("application/vnd.openxmlformats-officedocument.presentationml.template", "potx");
        MimeUtils.add("application/vnd.openxmlformats-officedocument.presentationml.slideshow", "ppsx");
        MimeUtils.add("application/vnd.rim.cod", "cod");
        MimeUtils.add("application/vnd.smaf", "mmf");
        MimeUtils.add("application/vnd.stardivision.calc", "sdc");
        MimeUtils.add("application/vnd.stardivision.draw", "sda");
        MimeUtils.add("application/vnd.stardivision.impress", "sdd");
        MimeUtils.add("application/vnd.stardivision.impress", "sdp");
        MimeUtils.add("application/vnd.stardivision.math", "smf");
        MimeUtils.add("application/vnd.stardivision.writer", "sdw");
        MimeUtils.add("application/vnd.stardivision.writer", "vor");
        MimeUtils.add("application/vnd.stardivision.writer-global", "sgl");
        MimeUtils.add("application/vnd.sun.xml.calc", "sxc");
        MimeUtils.add("application/vnd.sun.xml.calc.template", "stc");
        MimeUtils.add("application/vnd.sun.xml.draw", "sxd");
        MimeUtils.add("application/vnd.sun.xml.draw.template", "std");
        MimeUtils.add("application/vnd.sun.xml.impress", "sxi");
        MimeUtils.add("application/vnd.sun.xml.impress.template", "sti");
        MimeUtils.add("application/vnd.sun.xml.math", "sxm");
        MimeUtils.add("application/vnd.sun.xml.writer", "sxw");
        MimeUtils.add("application/vnd.sun.xml.writer.global", "sxg");
        MimeUtils.add("application/vnd.sun.xml.writer.template", "stw");
        MimeUtils.add("application/vnd.visio", "vsd");
        MimeUtils.add("application/x-abiword", "abw");
        MimeUtils.add("application/x-apple-diskimage", "dmg");
        MimeUtils.add("application/x-bcpio", "bcpio");
        MimeUtils.add("application/x-bittorrent", "torrent");
        MimeUtils.add("application/x-cdf", "cdf");
        MimeUtils.add("application/x-cdlink", "vcd");
        MimeUtils.add("application/x-chess-pgn", "pgn");
        MimeUtils.add("application/x-cpio", "cpio");
        MimeUtils.add("application/x-debian-package", "deb");
        MimeUtils.add("application/x-debian-package", "udeb");
        object = "application/x-director";
        MimeUtils.add((String)object, "dcr");
        MimeUtils.add((String)object, "dir");
        MimeUtils.add((String)object, "dxr");
        MimeUtils.add("application/x-dms", "dms");
        MimeUtils.add("application/x-doom", "wad");
        MimeUtils.add("application/x-dvi", "dvi");
        MimeUtils.add("application/x-flac", "flac");
        object = "application/x-font";
        MimeUtils.add((String)object, "pfa");
        MimeUtils.add((String)object, "pfb");
        MimeUtils.add((String)object, "gsf");
        MimeUtils.add((String)object, "pcf");
        MimeUtils.add((String)object, "pcf.Z");
        MimeUtils.add("application/x-freemind", "mm");
        MimeUtils.add("application/x-futuresplash", string2);
        MimeUtils.add("application/x-gnumeric", "gnumeric");
        MimeUtils.add("application/x-go-sgf", "sgf");
        MimeUtils.add("application/x-graphing-calculator", "gcf");
        object = "application/x-gtar";
        MimeUtils.add((String)object, "tgz");
        MimeUtils.add((String)object, "gtar");
        MimeUtils.add((String)object, "taz");
        MimeUtils.add("application/x-hdf", "hdf");
        MimeUtils.add("application/x-ica", "ica");
        MimeUtils.add("application/x-internet-signup", "ins");
        MimeUtils.add("application/x-internet-signup", "isp");
        MimeUtils.add("application/x-iphone", "iii");
        MimeUtils.add("application/x-iso9660-image", "iso");
        MimeUtils.add("application/x-jmol", "jmz");
        MimeUtils.add("application/x-kchart", "chrt");
        MimeUtils.add("application/x-killustrator", "kil");
        object = "application/x-koan";
        MimeUtils.add((String)object, "skp");
        MimeUtils.add((String)object, "skd");
        MimeUtils.add((String)object, "skt");
        MimeUtils.add((String)object, "skm");
        MimeUtils.add("application/x-kpresenter", "kpr");
        MimeUtils.add("application/x-kpresenter", "kpt");
        MimeUtils.add("application/x-kspread", "ksp");
        MimeUtils.add("application/x-kword", "kwd");
        MimeUtils.add("application/x-kword", "kwt");
        MimeUtils.add("application/x-latex", "latex");
        MimeUtils.add("application/x-lha", "lha");
        MimeUtils.add("application/x-lzh", "lzh");
        MimeUtils.add("application/x-lzx", "lzx");
        object = "application/x-maker";
        MimeUtils.add((String)object, "frm");
        MimeUtils.add((String)object, "maker");
        MimeUtils.add((String)object, "frame");
        MimeUtils.add((String)object, "fb");
        MimeUtils.add((String)object, "book");
        MimeUtils.add((String)object, "fbdoc");
        MimeUtils.add("application/x-mif", "mif");
        MimeUtils.add("application/x-ms-wmd", "wmd");
        MimeUtils.add("application/x-ms-wmz", "wmz");
        MimeUtils.add("application/x-msi", "msi");
        MimeUtils.add("application/x-ns-proxy-autoconfig", "pac");
        MimeUtils.add("application/x-nwc", "nwc");
        MimeUtils.add("application/x-object", "o");
        MimeUtils.add("application/x-oz-application", "oza");
        MimeUtils.add("application/x-pem-file", "pem");
        MimeUtils.add("application/x-pkcs12", "p12");
        MimeUtils.add("application/x-pkcs12", "pfx");
        MimeUtils.add("application/x-pkcs7-certreqresp", "p7r");
        MimeUtils.add("application/x-pkcs7-crl", "crl");
        MimeUtils.add("application/x-quicktimeplayer", "qtl");
        MimeUtils.add("application/x-shar", "shar");
        MimeUtils.add("application/x-shockwave-flash", "swf");
        MimeUtils.add("application/x-stuffit", "sit");
        MimeUtils.add("application/x-sv4cpio", "sv4cpio");
        MimeUtils.add("application/x-sv4crc", "sv4crc");
        MimeUtils.add("application/x-tar", "tar");
        MimeUtils.add("application/x-texinfo", "texinfo");
        MimeUtils.add("application/x-texinfo", "texi");
        MimeUtils.add("application/x-troff", "t");
        MimeUtils.add("application/x-troff", "roff");
        MimeUtils.add("application/x-troff-man", "man");
        MimeUtils.add("application/x-ustar", "ustar");
        MimeUtils.add("application/x-wais-source", "src");
        MimeUtils.add("application/x-wingz", "wz");
        MimeUtils.add("application/x-webarchive", "webarchive");
        MimeUtils.add("application/x-webarchive-xml", "webarchivexml");
        string2 = "crt";
        MimeUtils.add("application/x-x509-ca-cert", string2);
        MimeUtils.add("application/x-x509-user-cert", string2);
        MimeUtils.add("application/x-x509-server-cert", string2);
        MimeUtils.add("application/x-xcf", "xcf");
        MimeUtils.add("application/x-xfig", "fig");
        MimeUtils.add("application/xhtml+xml", "xhtml");
        MimeUtils.add("audio/3gpp", "3gpp");
        MimeUtils.add("audio/amr", "amr");
        MimeUtils.add("audio/basic", "snd");
        object = "audio/midi";
        MimeUtils.add((String)object, "mid");
        MimeUtils.add((String)object, "midi");
        MimeUtils.add((String)object, "kar");
        MimeUtils.add((String)object, "xmf");
        MimeUtils.add("audio/mobile-xmf", "mxmf");
        object = "audio/mpeg";
        MimeUtils.add((String)object, "mp3");
        MimeUtils.add((String)object, "mpga");
        MimeUtils.add((String)object, "mpega");
        MimeUtils.add((String)object, "mp2");
        MimeUtils.add((String)object, "m4a");
        MimeUtils.add("audio/mpegurl", "m3u");
        MimeUtils.add("audio/prs.sid", "sid");
        object = "audio/x-aiff";
        MimeUtils.add((String)object, "aif");
        MimeUtils.add((String)object, "aiff");
        MimeUtils.add((String)object, "aifc");
        MimeUtils.add("audio/x-gsm", "gsm");
        MimeUtils.add("audio/x-mpegurl", "m3u");
        MimeUtils.add("audio/x-ms-wma", "wma");
        MimeUtils.add("audio/x-ms-wax", "wax");
        object = "audio/x-pn-realaudio";
        MimeUtils.add((String)object, "ra");
        MimeUtils.add((String)object, "rm");
        MimeUtils.add((String)object, "ram");
        MimeUtils.add("audio/x-realaudio", "ra");
        MimeUtils.add("audio/x-scpls", "pls");
        MimeUtils.add("audio/x-sd2", "sd2");
        MimeUtils.add("audio/x-wav", "wav");
        MimeUtils.add("image/bmp", "bmp");
        MimeUtils.add("image/gif", "gif");
        MimeUtils.add("image/ico", "cur");
        MimeUtils.add("image/ico", "ico");
        MimeUtils.add("image/ief", "ief");
        object = "image/jpeg";
        MimeUtils.add((String)object, "jpeg");
        MimeUtils.add((String)object, "jpg");
        MimeUtils.add((String)object, "jpe");
        MimeUtils.add("image/pcx", "pcx");
        MimeUtils.add("image/png", "png");
        MimeUtils.add("image/svg+xml", "svg");
        MimeUtils.add("image/svg+xml", "svgz");
        MimeUtils.add("image/tiff", "tiff");
        MimeUtils.add("image/tiff", "tif");
        MimeUtils.add("image/vnd.djvu", "djvu");
        MimeUtils.add("image/vnd.djvu", "djv");
        MimeUtils.add("image/vnd.wap.wbmp", "wbmp");
        MimeUtils.add("image/x-cmu-raster", "ras");
        MimeUtils.add("image/x-coreldraw", "cdr");
        MimeUtils.add("image/x-coreldrawpattern", "pat");
        MimeUtils.add("image/x-coreldrawtemplate", "cdt");
        MimeUtils.add("image/x-corelphotopaint", string3);
        MimeUtils.add("image/x-icon", "ico");
        MimeUtils.add("image/x-jg", "art");
        MimeUtils.add("image/x-jng", "jng");
        MimeUtils.add("image/x-ms-bmp", "bmp");
        MimeUtils.add("image/x-photoshop", "psd");
        MimeUtils.add("image/x-portable-anymap", "pnm");
        MimeUtils.add("image/x-portable-bitmap", "pbm");
        MimeUtils.add("image/x-portable-graymap", "pgm");
        MimeUtils.add("image/x-portable-pixmap", "ppm");
        MimeUtils.add("image/x-rgb", "rgb");
        MimeUtils.add("image/x-xbitmap", "xbm");
        MimeUtils.add("image/x-xpixmap", "xpm");
        MimeUtils.add("image/x-xwindowdump", "xwd");
        MimeUtils.add("model/iges", "igs");
        MimeUtils.add("model/iges", "iges");
        object = "model/mesh";
        MimeUtils.add((String)object, "msh");
        MimeUtils.add((String)object, "mesh");
        MimeUtils.add((String)object, "silo");
        MimeUtils.add("text/calendar", "ics");
        MimeUtils.add("text/calendar", "icz");
        MimeUtils.add("text/comma-separated-values", "csv");
        MimeUtils.add("text/css", "css");
        MimeUtils.add("text/html", "htm");
        MimeUtils.add("text/html", "html");
        MimeUtils.add("text/h323", "323");
        MimeUtils.add("text/iuls", "uls");
        MimeUtils.add("text/mathml", "mml");
        object = "text/plain";
        MimeUtils.add((String)object, "txt");
        MimeUtils.add((String)object, "asc");
        MimeUtils.add((String)object, "text");
        MimeUtils.add((String)object, "diff");
        MimeUtils.add((String)object, "po");
        MimeUtils.add("text/richtext", "rtx");
        MimeUtils.add("text/rtf", "rtf");
        MimeUtils.add("text/texmacs", "ts");
        MimeUtils.add("text/text", "phps");
        MimeUtils.add("text/tab-separated-values", "tsv");
        MimeUtils.add("text/xml", "xml");
        MimeUtils.add("text/x-bibtex", "bib");
        MimeUtils.add("text/x-boo", "boo");
        object = "text/x-c++hdr";
        MimeUtils.add((String)object, "hpp");
        MimeUtils.add((String)object, "h++");
        MimeUtils.add((String)object, "hxx");
        MimeUtils.add((String)object, "hh");
        object = "text/x-c++src";
        MimeUtils.add((String)object, "cpp");
        MimeUtils.add((String)object, "c++");
        MimeUtils.add((String)object, "cc");
        MimeUtils.add((String)object, "cxx");
        MimeUtils.add("text/x-chdr", "h");
        MimeUtils.add("text/x-component", "htc");
        MimeUtils.add("text/x-csh", "csh");
        MimeUtils.add("text/x-csrc", "c");
        MimeUtils.add("text/x-dsrc", "d");
        MimeUtils.add("text/x-haskell", "hs");
        MimeUtils.add("text/x-java", "java");
        MimeUtils.add("text/x-literate-haskell", "lhs");
        MimeUtils.add("text/x-moc", "moc");
        MimeUtils.add("text/x-pascal", "p");
        MimeUtils.add("text/x-pascal", "pas");
        MimeUtils.add("text/x-pcs-gcd", "gcd");
        MimeUtils.add("text/x-setext", "etx");
        MimeUtils.add("text/x-tcl", "tcl");
        object = "text/x-tex";
        MimeUtils.add((String)object, "tex");
        MimeUtils.add((String)object, "ltx");
        MimeUtils.add((String)object, "sty");
        MimeUtils.add((String)object, "cls");
        MimeUtils.add("text/x-vcalendar", "vcs");
        MimeUtils.add("text/x-vcard", "vcf");
        object = "video/3gpp";
        MimeUtils.add((String)object, "3gpp");
        MimeUtils.add((String)object, "3gp");
        MimeUtils.add((String)object, "3g2");
        MimeUtils.add("video/dl", "dl");
        MimeUtils.add("video/dv", "dif");
        MimeUtils.add("video/dv", "dv");
        MimeUtils.add("video/fli", "fli");
        MimeUtils.add("video/m4v", "m4v");
        object = "video/mpeg";
        MimeUtils.add((String)object, "mpeg");
        MimeUtils.add((String)object, "mpg");
        MimeUtils.add((String)object, "mpe");
        MimeUtils.add("video/mp4", "mp4");
        MimeUtils.add((String)object, "VOB");
        MimeUtils.add("video/quicktime", "qt");
        MimeUtils.add("video/quicktime", "mov");
        MimeUtils.add("video/vnd.mpegurl", "mxu");
        MimeUtils.add("video/x-la-asf", "lsf");
        MimeUtils.add("video/x-la-asf", "lsx");
        MimeUtils.add("video/x-mng", "mng");
        MimeUtils.add("video/x-ms-asf", "asf");
        MimeUtils.add("video/x-ms-asf", "asx");
        MimeUtils.add("video/x-ms-wm", "wm");
        MimeUtils.add("video/x-ms-wmv", "wmv");
        MimeUtils.add("video/x-ms-wmx", "wmx");
        MimeUtils.add("video/x-ms-wvx", "wvx");
        MimeUtils.add("video/x-msvideo", "avi");
        MimeUtils.add("video/x-sgi-movie", "movie");
        MimeUtils.add("video/x-webex", "wrf");
        MimeUtils.add("x-conference/x-cooltalk", "ice");
        MimeUtils.add("x-epoc/x-sisx-app", "sisx");
    }

    private MimeUtils() {
    }

    private static void add(String string2, String string3) {
        Map map = mimeTypeToExtensionMap;
        boolean bl2 = map.containsKey(string2);
        if (!bl2) {
            map.put(string2, string3);
        }
        extensionToMimeTypeMap.put(string3, string2);
    }

    public static String guessExtensionFromMimeType(String string2) {
        boolean bl2;
        if (string2 != null && !(bl2 = string2.isEmpty())) {
            return (String)mimeTypeToExtensionMap.get(string2);
        }
        return null;
    }

    public static String guessMimeTypeFromExtension(String string2) {
        boolean bl2;
        if (string2 != null && !(bl2 = string2.isEmpty())) {
            return (String)extensionToMimeTypeMap.get(string2);
        }
        return null;
    }
}

